(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     14928,        397]
NotebookOptionsPosition[     13606,        349]
NotebookOutlinePosition[     13994,        366]
CellTagsIndexPosition[     13951,        363]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Notebooks", "[", "\"\<GMFormats.nb\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.6185044356647177`*^9, 3.618504442199737*^9}, {
  3.618504562185317*^9, 3.618504573553851*^9}}],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<GMFormats`\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.618504398662925*^9, 3.618504406193672*^9}, {
  3.618504450689948*^9, 3.6185044805345783`*^9}, {3.618504578138891*^9, 
  3.6185045810096407`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ShowStep", "::", "usage"}], "=", 
   "\"\<ShowStep[exp,listfun] (dynamic) gives a grid of calculations on exp \
and updates listfun with an inputform\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowIncrementalCalc", "::", "usage"}], "=", 
   "\"\<ShowIncrementalCalc[exp,listfun] (not dynamic) gives a grid of \
Incremental calculations\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FoldOut", "::", "usage"}], "=", 
   "\"\<FoldOut[] folds the cell and selects it\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"IF", "::", "usage"}], "=", "\"\<InputForm\>\""}], "\n", 
 RowBox[{
  RowBox[{"FF", "::", "usage"}], "=", "\"\<FullForm\>\""}]}], "Code",
 CellChangeTimes->{{3.6185045520013638`*^9, 3.618504586956045*^9}, {
  3.618504710328432*^9, 3.618504723317185*^9}, {3.6185496138673964`*^9, 
  3.618549619070853*^9}, {3.618550505130549*^9, 3.618550605942609*^9}, {
  3.618550754413486*^9, 3.6185507546531467`*^9}, {3.618550877356915*^9, 
  3.6185509349301987`*^9}}],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.618504793222816*^9, 3.618504801361219*^9}, 
   3.6185513748907127`*^9},
 CellID->2146012984],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.6185510158020906`*^9, 3.6185510289747963`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Formatting expressions and cells\
\>", "Subsubsection",
 CellChangeTimes->{{3.6185506696225853`*^9, 3.618550685172102*^9}, {
  3.618550949347561*^9, 3.618550951349251*^9}}],

Cell["FoldOut folds the output of the verbose xAct function. ", "Text",
 CellChangeTimes->{{3.618550727220047*^9, 3.6185507308796473`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FoldOut", "[", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$FrontEnd", "=!=", "$Failed"}], ",", 
     RowBox[{
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        RowBox[{"EvaluationNotebook", "[", "]"}], ",", "All", ",", 
        "EvaluationCell"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
       "]"}]}]}], "]"}], ")"}]}]], "Code"],

Cell["IF can be helpful to check the InputForm of xAct expressions", "Text",
 CellChangeTimes->{{3.618113478947302*^9, 3.6181134975170116`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IF", "=", "InputForm"}], ";", 
  RowBox[{"FF", "=", "FullForm"}], ";"}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.6168508835349417`*^9, 3.616850891410338*^9}, 
   3.616858408063521*^9, {3.617973091962714*^9, 3.6179730977721167`*^9}, {
   3.618055911271738*^9, 3.618055917320537*^9}, {3.618064551471661*^9, 
   3.618064554808283*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using a previous list of functions on an expression\
\>", "Subsubsection",
 CellChangeTimes->{{3.618550199707238*^9, 3.618550201363937*^9}, {
  3.618550483886393*^9, 3.618550501483592*^9}}],

Cell["\<\
IncrementalCalc (not Dynamic) gives an n\[Times]2 list of \
expressions\[Times]functions with input an expression and an n-1 list of \
functions.
ShowIncrementalCalc wraps IncrementalCalc in a grid.\
\>", "Text",
 CellChangeTimes->{{3.6185479959350157`*^9, 3.618548053091506*^9}, {
  3.6185481171731863`*^9, 3.618548157587934*^9}, {3.618550348844554*^9, 
  3.6185504062925873`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IncrementalCalc", "[", 
    RowBox[{"exp_", ",", "listfun_"}], "]"}], ":=", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{
      RowBox[{"{", "\"\<Id\>\"", "}"}], "~", "Join", "~", "listfun"}], ",", 
     RowBox[{"ComposeList", "[", 
      RowBox[{"listfun", ",", "exp"}], "]"}], ",", "List"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowIncrementalCalc", "[", 
    RowBox[{"exp_", ",", "listfun_"}], "]"}], ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"IncrementalCalc", "[", 
      RowBox[{"exp", ",", "listfun"}], "]"}], ",", 
     RowBox[{"ItemStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Input\>\"", ",", "\"\<Output\>\""}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.6184995417902327`*^9, 3.618499569406335*^9}, {
   3.618499837188739*^9, 3.618499869408622*^9}, {3.618501517711927*^9, 
   3.618501549706129*^9}, {3.61850237865769*^9, 3.618502453723119*^9}, {
   3.6185030996928377`*^9, 3.618503116134942*^9}, {3.618503189745068*^9, 
   3.6185031943243504`*^9}, {3.618503389277583*^9, 3.6185034243884172`*^9}, {
   3.618503520928866*^9, 3.61850352558237*^9}, {3.618503664020649*^9, 
   3.618503709257453*^9}, {3.6185037412816563`*^9, 3.618503741502015*^9}, {
   3.618504050784727*^9, 3.618504053205264*^9}, {3.6185048227066174`*^9, 
   3.6185048490806017`*^9}, {3.6185049267107267`*^9, 3.618504956465782*^9}, 
   3.618510833805434*^9, {3.618550303282583*^9, 3.6185503464696503`*^9}, {
   3.618550409585073*^9, 3.618550437731225*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ShowStep", "Subsubsection",
 CellChangeTimes->{{3.6185501919985437`*^9, 3.618550194665613*^9}}],

Cell["\<\
GridCalcsFuns (not dynamic) presents the output of a n\[Times]2 list with \
input an (n-1)-list and an n-list\
\>", "Text",
 CellChangeTimes->{{3.618548073641128*^9, 3.618548106729195*^9}, {
  3.618548164339218*^9, 3.618548199610973*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "GridCalcsFuns", "]"}], "=", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GridCalcsFuns", "[", 
    RowBox[{"listcalc_", ",", "listfun_"}], "]"}], ":=", "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Inner", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{
        RowBox[{"{", "\"\<Id\>\"", "}"}], "~", "Join", "~", "listfun"}], ",", 
       "listcalc", ",", "List"}], "]"}], ",", 
     RowBox[{"ItemStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Input\>\"", ",", "\"\<Output\>\""}], "}"}], ",", 
        "Automatic"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.6184995417902327`*^9, 3.618499569406335*^9}, {
   3.618499837188739*^9, 3.618499869408622*^9}, {3.618501517711927*^9, 
   3.618501549706129*^9}, {3.61850237865769*^9, 3.618502453723119*^9}, {
   3.6185030996928377`*^9, 3.618503116134942*^9}, {3.618503189745068*^9, 
   3.6185031943243504`*^9}, {3.618503389277583*^9, 3.6185034243884172`*^9}, {
   3.618503520928866*^9, 3.61850352558237*^9}, {3.618503664020649*^9, 
   3.618503709257453*^9}, {3.6185037412816563`*^9, 3.618503741502015*^9}, {
   3.618504050784727*^9, 3.618504053205264*^9}, {3.6185048227066174`*^9, 
   3.6185048490806017`*^9}, {3.6185049267107267`*^9, 3.618504956465782*^9}, {
   3.6185067888453817`*^9, 3.618506789651146*^9}, {3.6185106734636087`*^9, 
   3.618510674062402*^9}, {3.618510833808626*^9, 3.618510858189187*^9}, {
   3.61851095809365*^9, 3.618510961987114*^9}, {3.618511207536887*^9, 
   3.618511212373049*^9}, {3.618541702393783*^9, 3.618541746379004*^9}, 
   3.6185417883124323`*^9, {3.618541863080164*^9, 3.61854186953001*^9}, {
   3.618543683330668*^9, 3.618543715849052*^9}, {3.6185438315056*^9, 
   3.618543836210945*^9}, {3.6185475921639223`*^9, 3.618547608228683*^9}, {
   3.6185476489482403`*^9, 3.6185476650283947`*^9}, {3.6185477108913803`*^9, 
   3.618547717712982*^9}, {3.618547759627811*^9, 3.618547807397616*^9}}],

Cell["\<\
AppendCalcsFuns (not dynamic despite dynamic inputfield) appends and removes \
values from (any1-list) listcal and (any2-list) listfun.\
\>", "Text",
 CellChangeTimes->{{3.6185482151654654`*^9, 3.618548326085761*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "AppendCalcsFuns", "]"}], "=", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendCalcsFuns", "[", 
    RowBox[{"listcalc_", ",", "listfun_"}], "]"}], ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"InputField", "[", "\n", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Null", ",", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"listfun", ",", "#"}], "]"}], ",", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"listcalc", ",", 
               RowBox[{"#", "[", 
                RowBox[{"Last", "[", "listcalc", "]"}], "]"}]}], "]"}]}], 
            "\n", "}"}], "&"}]}], "]"}], "\n", "]"}], "\n", ",", "\n", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Go Back\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "listfun", "]"}], ">", "1"}], ",", 
           RowBox[{
            RowBox[{"listcalc", "=", 
             RowBox[{"Drop", "[", 
              RowBox[{"listcalc", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], ";", 
            RowBox[{"listfun", "=", 
             RowBox[{"Drop", "[", 
              RowBox[{"listfun", ",", 
               RowBox[{"-", "1"}]}], "]"}]}]}]}], "]"}]}], "]"}]}], "\n", 
      "}"}], "}"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.618543955057671*^9, 3.618544021607081*^9}, {
   3.6185440692140837`*^9, 3.618544217224625*^9}, {3.61854462716049*^9, 
   3.618544629975122*^9}, {3.618544756135749*^9, 3.618544756613675*^9}, {
   3.618544850653551*^9, 3.618544865433277*^9}, {3.618546144596385*^9, 
   3.618546156079414*^9}, {3.6185462959044323`*^9, 3.618546304376248*^9}, {
   3.6185463503329163`*^9, 3.6185463584632273`*^9}, {3.618546704901338*^9, 
   3.6185467272763968`*^9}, {3.618547241898004*^9, 3.618547251742593*^9}, {
   3.6185483569702787`*^9, 3.618548435419086*^9}, {3.618555981625489*^9, 
   3.61855599204912*^9}, {3.6185564221045437`*^9, 3.61855643110466*^9}, {
   3.618556608550665*^9, 3.618556620160693*^9}, 3.618556651687538*^9}],

Cell["\<\
ShowStep (dynamic) shows a grid of calculations with initial expression exp \
and initial list of functions listfun that is updated.\
\>", "Text",
 CellChangeTimes->{{3.618550113934119*^9, 3.618550175765329*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ShowStep", "]"}], "=", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ShowStep", "[", 
   RowBox[{"exp_", ",", "listfun_"}], "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listcalc", "=", 
      RowBox[{"ScreenDollarIndices", "/@", 
       RowBox[{"ComposeList", "[", 
        RowBox[{"listfun", ",", "exp"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dynamic", "[", 
        RowBox[{"GridCalcsFuns", "[", 
         RowBox[{"listcalc", ",", "listfun"}], "]"}], "]"}], ",", "\n", 
       RowBox[{"AppendCalcsFuns", "[", 
        RowBox[{"listcalc", ",", "listfun"}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Code",
 CellChangeTimes->{{3.61854141336057*^9, 3.618541418546962*^9}, {
   3.6185414914293203`*^9, 3.618541624361375*^9}, {3.618541809688644*^9, 
   3.618541851706023*^9}, {3.6185438257751493`*^9, 3.618543925206242*^9}, {
   3.618543994523041*^9, 3.6185439990779943`*^9}, {3.618547553470933*^9, 
   3.6185475624871283`*^9}, {3.618548501920692*^9, 3.618548516101816*^9}, {
   3.618548554117157*^9, 3.618548608190481*^9}, {3.6185491051785173`*^9, 
   3.618549108803832*^9}, {3.618549311054401*^9, 3.618549354017514*^9}, {
   3.618549518632825*^9, 3.618549543817812*^9}, {3.6185512555354*^9, 
   3.618551263276492*^9}, {3.618556210926772*^9, 3.6185562183297033`*^9}, {
   3.61855624917729*^9, 3.618556252970997*^9}, 3.6185563012756023`*^9, {
   3.618556515565447*^9, 3.618556536753949*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Subsection",
 CellChangeTimes->{{3.618550975547638*^9, 3.6185509760171947`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.618504793222816*^9, 3.6185048049166183`*^9}}]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{900, 741},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 373, 9, 30, "Input"],
Cell[933, 31, 249, 4, 46, "Code"],
Cell[1185, 37, 1027, 23, 123, "Code"],
Cell[2215, 62, 188, 4, 46, "Code",
 CellID->2146012984],
Cell[CellGroupData[{
Cell[2428, 70, 101, 1, 39, "Subsection"],
Cell[CellGroupData[{
Cell[2554, 75, 182, 4, 28, "Subsubsection"],
Cell[2739, 81, 139, 1, 30, "Text"],
Cell[2881, 84, 501, 14, 66, "Code"],
Cell[3385, 100, 144, 1, 30, "Text"],
Cell[3532, 103, 385, 8, 46, "Code",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3954, 116, 199, 4, 28, "Subsubsection"],
Cell[4156, 122, 392, 8, 49, "Text"],
Cell[4551, 132, 1769, 40, 66, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6357, 177, 101, 1, 28, "Subsubsection"],
Cell[6461, 180, 248, 5, 30, "Text"],
Cell[6712, 187, 2187, 43, 85, "Code"],
Cell[8902, 232, 227, 4, 30, "Text"],
Cell[9132, 238, 2245, 51, 237, "Code"],
Cell[11380, 291, 222, 4, 30, "Text"],
Cell[11605, 297, 1642, 35, 123, "Code"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13296, 338, 93, 1, 39, "Subsection"],
Cell[13392, 341, 198, 5, 66, "Code"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
