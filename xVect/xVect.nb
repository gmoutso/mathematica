(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    110234,       2630]
NotebookOptionsPosition[    106758,       2515]
NotebookOutlinePosition[    107147,       2532]
CellTagsIndexPosition[    107104,       2529]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Begin package", "Subsection",
 CellChangeTimes->{{3.618331763848878*^9, 3.61833176903251*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Notebooks", "[", "\"\<xVect.nb\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.618229364078636*^9, 3.618229364079954*^9}, {
  3.618229401074563*^9, 3.618229402214056*^9}}],

Cell["\<\
Package cells should be Initialization or Code styles\
\>", "Text",
 CellChangeTimes->{{3.618229419153187*^9, 3.618229430331563*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<xAct`xVect`\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<xAct`xTensor`\>\"", ",", "\"\<xAct`xCore`\>\"", ",", 
      "\"\<xAct`xPerm`\>\""}], "}"}]}], "]"}], ";"}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.618229432895454*^9, 3.618229441592971*^9}, {
   3.618229474225127*^9, 3.618229496801626*^9}, {3.6182872139635563`*^9, 
   3.618287281956126*^9}, {3.618330678483066*^9, 3.618330680694462*^9}, {
   3.6183308511165*^9, 3.618330857023451*^9}, {3.6183348586474524`*^9, 
   3.618334869433241*^9}, 3.618334915405406*^9, 3.6183354781604424`*^9, {
   3.61833558257797*^9, 3.618335586049418*^9}, {3.618335623905251*^9, 
   3.618335636994402*^9}, 3.61855184450557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["My Functions", "Subsection",
 CellChangeTimes->{{3.618194324911702*^9, 3.61819432956885*^9}, {
  3.618330660625517*^9, 3.618330662876134*^9}}],

Cell[CellGroupData[{

Cell["Logical functions", "Subsubsection",
 CellChangeTimes->{{3.6183312965926943`*^9, 3.6183313028386908`*^9}}],

Cell["\<\
IndexBelongsToQ might be more convenient that xAct\[CloseCurlyQuote]s names\
\>", "Text",
 CellChangeTimes->{{3.618113433252286*^9, 3.618113452360531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IndexBelongsTo", "[", 
    RowBox[{"vbundle_", ",", "a_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"VBundleOfIndex", "[", "a", "]"}], "===", "vbundle"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IndexBelongsToQ", "[", "vbundle_", "]"}], ":=", 
   RowBox[{
    RowBox[{"IndexBelongsTo", "[", 
     RowBox[{"vbundle", ",", "#"}], "]"}], "&"}]}], ";"}]}], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.6168566520102463`*^9, 3.616856712452911*^9}, {
   3.616856860777034*^9, 3.6168568622148247`*^9}, 3.6168584080463867`*^9, {
   3.616861096493599*^9, 3.616861152720586*^9}, {3.617007104488234*^9, 
   3.617007112129052*^9}, {3.617943895300576*^9, 3.6179439091724663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Or", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"UpIndexQ", "[", "ind1", "]"}], ",", "UpIndexQ"}], "]"}], ",", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"DownIndexQ", "[", "ind1", "]"}], ",", "DownIndexQ"}], "]"}]}], 
   "]"}], "[", 
  RowBox[{"-", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.618416081758789*^9, 3.61841609551857*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.618416083015828*^9, 3.618416096061626*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SameUpDown", "[", 
    RowBox[{"ind1_", ",", "ind2_"}], "]"}], ":=", 
   RowBox[{"Or", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"UpIndexQ", "[", "ind1", "]"}], ",", 
       RowBox[{"UpIndexQ", "[", "ind2", "]"}]}], "]"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"DownIndexQ", "[", "ind1", "]"}], ",", 
       RowBox[{"DownIndexQ", "[", "ind2", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SameUpDownQ", "[", "ind1_", "]"}], ":=", 
   RowBox[{"Or", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"UpIndexQ", "[", "ind1", "]"}], ",", "UpIndexQ"}], "]"}], ",", 
     
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"DownIndexQ", "[", "ind1", "]"}], ",", "DownIndexQ"}], "]"}]}],
     "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.618416056806119*^9, 3.618416060972789*^9}, {
  3.618416141312016*^9, 3.6184162002345743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SameBundle", "[", 
    RowBox[{"ind1_", ",", "ind2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"VBundleOfIndex", "[", "ind1", "]"}], "===", 
    RowBox[{"VBundleOfIndex", "[", "ind2", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SameBundleQ", "[", "ind1_", "]"}], "[", "ind2_", "]"}], ":=", 
   RowBox[{
    RowBox[{"VBundleOfIndex", "[", "ind1", "]"}], "===", 
    RowBox[{"VBundleOfIndex", "[", "ind2", "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.6183782042718067`*^9, 3.618378266670401*^9}, {
  3.618415983417963*^9, 3.6184160210244493`*^9}, {3.618416205114738*^9, 
  3.61841622435995*^9}, {3.6184213878486843`*^9, 3.618421404033889*^9}, {
  3.618421434084776*^9, 3.618421482506337*^9}, {3.618422066365794*^9, 
  3.6184220776827497`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Replacement  functions", "Subsubsection",
 CellChangeTimes->{{3.618055837480205*^9, 3.6180558417979794`*^9}, {
   3.618113463835002*^9, 3.61811347253559*^9}, {3.618331477059412*^9, 
   3.618331479408723*^9}, 3.6183315842444*^9, {3.618396826790572*^9, 
   3.618396829299968*^9}}],

Cell["MakeZero for postfix", "Text",
 CellChangeTimes->{{3.6183316216860733`*^9, 3.6183316316972723`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Attributes", "[", "#", "]"}], "=", 
       RowBox[{"{", "HoldAll", "}"}]}], ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"DefZero", ",", "MakeZeroRule", ",", "MakeRule"}], "}"}]}], 
   ";"}], "*)"}]], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.6168600749455547`*^9, 3.616860080923621*^9}, {
   3.616860854935782*^9, 3.616860903442067*^9}, 3.6168610111020803`*^9, 
   3.6168612036178207`*^9, {3.6168612850162277`*^9, 3.616861289201479*^9}, {
   3.616861332061905*^9, 3.616861339922902*^9}, {3.616861878892074*^9, 
   3.616861925762252*^9}, {3.616862026719501*^9, 3.61686207317496*^9}, {
   3.61686394300838*^9, 3.616863979590826*^9}, {3.616864018734687*^9, 
   3.6168641164828176`*^9}, {3.6168641827197227`*^9, 3.616864188324667*^9}, {
   3.616864936986351*^9, 3.616864939630794*^9}, {3.617943588552987*^9, 
   3.617943592656269*^9}, {3.617943680940076*^9, 3.61794371427487*^9}, {
   3.617943762722764*^9, 3.6179438000399513`*^9}, {3.617943836740142*^9, 
   3.6179438445178967`*^9}, {3.617950676480775*^9, 3.617950681003458*^9}, {
   3.617950977807498*^9, 3.617951020402391*^9}, {3.617951067322496*^9, 
   3.617951158235278*^9}, {3.6179511910149307`*^9, 3.617951195593625*^9}, {
   3.6179720038692007`*^9, 3.617972029077005*^9}, 3.617972461210073*^9, 
   3.6180542030049553`*^9, {3.618054451203349*^9, 3.618054593001464*^9}, {
   3.618054644954132*^9, 3.6180547222100163`*^9}, {3.6180551284168253`*^9, 
   3.618055142146209*^9}, {3.618055299505912*^9, 3.61805531731448*^9}, {
   3.618055854384349*^9, 3.618055890628964*^9}, {3.618055942652207*^9, 
   3.6180559632468243`*^9}, {3.618055997031835*^9, 3.618056098891807*^9}, {
   3.6180642382331553`*^9, 3.618064252088694*^9}, {3.618117540555953*^9, 
   3.618117571736298*^9}, {3.618117651200732*^9, 3.6181176993636827`*^9}, {
   3.618117758125121*^9, 3.6181177590350122`*^9}, {3.6181179312843323`*^9, 
   3.618117947146747*^9}, {3.61811888146472*^9, 3.618118881982308*^9}, {
   3.618331419203651*^9, 3.6183314625849543`*^9}, {3.618331528723132*^9, 
   3.61833153147701*^9}, {3.618331591527687*^9, 3.618331593384563*^9}, {
   3.618331692547668*^9, 3.6183317258126907`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MakeZeroRule", "[", 
    RowBox[{"tens_", "[", "inds___", "]"}], "]"}], ":=", 
   RowBox[{"MakeRule", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tens", "[", "inds", "]"}], ",", 
      RowBox[{"Zero", "[", "inds", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeZeroRule", "[", 
    RowBox[{"tens1_", ",", "tensr__"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"MakeZeroRule", "[", "tens1", "]"}], "~", "Join", "~", 
    RowBox[{"MakeZeroRule", "[", "tensr", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MakeZero", "[", "tens__", "]"}], ":=", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"#", ",", 
     RowBox[{"MakeZeroRule", "[", "tens", "]"}]}], "]"}], "&"}]}]}], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.6168600749455547`*^9, 3.616860080923621*^9}, {
   3.616860854935782*^9, 3.616860903442067*^9}, 3.6168610111020803`*^9, 
   3.6168612036178207`*^9, {3.6168612850162277`*^9, 3.616861289201479*^9}, {
   3.616861332061905*^9, 3.616861339922902*^9}, {3.616861878892074*^9, 
   3.616861925762252*^9}, {3.616862026719501*^9, 3.61686207317496*^9}, {
   3.61686394300838*^9, 3.616863979590826*^9}, {3.616864018734687*^9, 
   3.6168641164828176`*^9}, {3.6168641827197227`*^9, 3.616864188324667*^9}, {
   3.616864936986351*^9, 3.616864939630794*^9}, {3.617943588552987*^9, 
   3.617943592656269*^9}, {3.617943680940076*^9, 3.61794371427487*^9}, {
   3.617943762722764*^9, 3.6179438000399513`*^9}, {3.617943836740142*^9, 
   3.6179438445178967`*^9}, {3.617950676480775*^9, 3.617950681003458*^9}, {
   3.617950977807498*^9, 3.617951020402391*^9}, {3.617951067322496*^9, 
   3.617951158235278*^9}, {3.6179511910149307`*^9, 3.617951195593625*^9}, {
   3.6179720038692007`*^9, 3.617972029077005*^9}, 3.617972461210073*^9, 
   3.6180542030049553`*^9, {3.618054451203349*^9, 3.618054593001464*^9}, {
   3.618054644954132*^9, 3.6180547222100163`*^9}, {3.6180551284168253`*^9, 
   3.618055142146209*^9}, {3.618055299505912*^9, 3.61805531731448*^9}, {
   3.618055854384349*^9, 3.618055890628964*^9}, {3.618055942652207*^9, 
   3.6180559632468243`*^9}, {3.618055997031835*^9, 3.618056098891807*^9}, {
   3.6180642382331553`*^9, 3.618064252088694*^9}, {3.618117540555953*^9, 
   3.618117571736298*^9}, {3.618117651200732*^9, 3.6181176993636827`*^9}, {
   3.618117758125121*^9, 3.6181177590350122`*^9}, {3.6181179312843323`*^9, 
   3.618117947146747*^9}, {3.61811888146472*^9, 3.618118881982308*^9}, {
   3.618331419203651*^9, 3.6183314625849543`*^9}, {3.618331528723132*^9, 
   3.61833153147701*^9}, {3.618331591527687*^9, 3.618331593384563*^9}, {
   3.618331692547668*^9, 3.61833169619517*^9}, 3.618384264512445*^9}],

Cell["ReplaceTensor for postfix replacement", "Text",
 CellChangeTimes->{{3.6183316644665537`*^9, 3.618331680693111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceTensor", "[", 
   RowBox[{"tens1_", ",", "tens2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"#", ",", 
     RowBox[{"MakeRule", "[", 
      RowBox[{"{", 
       RowBox[{"tens1", ",", "tens2"}], "}"}], "]"}]}], "]"}], 
   "&"}]}]], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.6168600749455547`*^9, 3.616860080923621*^9}, {
   3.616860854935782*^9, 3.616860903442067*^9}, 3.6168610111020803`*^9, 
   3.6168612036178207`*^9, {3.6168612850162277`*^9, 3.616861289201479*^9}, {
   3.616861332061905*^9, 3.616861339922902*^9}, {3.616861878892074*^9, 
   3.616861925762252*^9}, {3.616862026719501*^9, 3.61686207317496*^9}, {
   3.61686394300838*^9, 3.616863979590826*^9}, {3.616864018734687*^9, 
   3.6168641164828176`*^9}, {3.6168641827197227`*^9, 3.616864188324667*^9}, {
   3.616864936986351*^9, 3.616864939630794*^9}, {3.617943588552987*^9, 
   3.617943592656269*^9}, {3.617943680940076*^9, 3.61794371427487*^9}, {
   3.617943762722764*^9, 3.6179438000399513`*^9}, {3.617943836740142*^9, 
   3.6179438445178967`*^9}, {3.617950676480775*^9, 3.617950681003458*^9}, {
   3.617950977807498*^9, 3.617951020402391*^9}, {3.617951067322496*^9, 
   3.617951158235278*^9}, {3.6179511910149307`*^9, 3.617951195593625*^9}, {
   3.6179720038692007`*^9, 3.617972029077005*^9}, 3.617972461210073*^9, 
   3.6180542030049553`*^9, {3.618054451203349*^9, 3.618054593001464*^9}, {
   3.618054644954132*^9, 3.6180547222100163`*^9}, {3.6180551284168253`*^9, 
   3.618055142146209*^9}, {3.618055299505912*^9, 3.61805531731448*^9}, {
   3.618055854384349*^9, 3.618055890628964*^9}, {3.618055942652207*^9, 
   3.6180559632468243`*^9}, {3.618055997031835*^9, 3.618056098891807*^9}, {
   3.6180642382331553`*^9, 3.618064252088694*^9}, {3.618117540555953*^9, 
   3.618117571736298*^9}, {3.618117651200732*^9, 3.6181176993636827`*^9}, {
   3.618117758125121*^9, 3.6181177590350122`*^9}, {3.6181179312843323`*^9, 
   3.618117947146747*^9}, {3.61811888146472*^9, 3.618118881982308*^9}, {
   3.618331419203651*^9, 3.6183314625849543`*^9}, {3.6183315993378887`*^9, 
   3.618331610882914*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DefZero for automated rules.", "Subsubsection",
 CellChangeTimes->{{3.6183316417267027`*^9, 3.6183316560865297`*^9}, {
   3.618396767724578*^9, 3.618396772716648*^9}, 3.6183968380326433`*^9}],

Cell["\<\
Our use case should be similar to as follows\
\>", "Text",
 CellChangeTimes->{{3.6183316417267027`*^9, 3.6183316560865297`*^9}, {
  3.618396767724578*^9, 3.618396772716648*^9}, {3.6183968380326433`*^9, 
  3.618396839888976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "/:", 
   RowBox[{
    RowBox[{
     RowBox[{"oper_", "?", "CovDQ"}], "[", "ind1_", "]"}], "[", 
    RowBox[{"test", "[", "ind2_", "]"}], "]"}], ":=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", "/:", 
   RowBox[{"oper_", "[", 
    RowBox[{"test", "[", "ind2_", "]"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"test", "[", "ind", "]"}], ",", 
   RowBox[{
    RowBox[{"test", "[", "ind", "]"}], "+", "3"}], ",", 
   RowBox[{
    RowBox[{"SO8D", "[", "ind1", "]"}], "[", 
    RowBox[{"test", "[", "ind1", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"SO8D", "[", "ind1", "]"}], "[", 
    RowBox[{
     RowBox[{"test", "[", "ind1", "]"}], "3"}], "]"}], ",", 
   RowBox[{
    RowBox[{"dert", "[", "ind1", "]"}], "[", 
    RowBox[{
     RowBox[{"test", "[", "ind1", "]"}], "3"}], "]"}], ",", 
   RowBox[{
    RowBox[{"dert", "[", "ind1", "]"}], "[", 
    RowBox[{"test", "[", "ind", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"PD", "[", "ind1", "]"}], "[", 
    RowBox[{
     RowBox[{"test", "[", "ind1", "]"}], "3"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"test", ",", "Dtest"}], "]"}]}], "Input",
 CellChangeTimes->{{3.618380157313012*^9, 3.618380316030488*^9}, {
   3.6183807994583597`*^9, 3.6183808266266527`*^9}, {3.6183809784382687`*^9, 
   3.618381010603244*^9}, 3.618381128479013*^9, {3.6183818871085463`*^9, 
   3.618381909425522*^9}, {3.6183819742063*^9, 3.61838197583214*^9}, {
   3.618382272864809*^9, 3.618382314934856*^9}, {3.618495988800467*^9, 
   3.6184960058632812`*^9}, {3.618496123748622*^9, 3.6184961505046377`*^9}, {
   3.6184962932664013`*^9, 3.618496311706621*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3", ",", "1", ",", "3", ",", 
   RowBox[{
    RowBox[{"dert", "[", "ind1", "]"}], "[", 
    RowBox[{"3", " ", 
     RowBox[{"test", "[", "ind1", "]"}]}], "]"}], ",", "0", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.61849631215902*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DefZero", "[", 
   RowBox[{"tens_", "[", "inds___", "]"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "the", " ", "input", " ", "indices", " ", "are", " ", "rewritten", " ", 
     "as", " ", "patterns"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"indspattern", "=", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"List", "[", "inds", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a_Symbol", "\[Rule]", "a_Symbol"}], ",", 
            RowBox[{
             RowBox[{"-", "a_Symbol"}], "\[Rule]", 
             RowBox[{"-", "a_Symbol"}]}]}], "}"}], ",", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "\n", ",", "\n", 
      RowBox[{"indsbundles", "=", 
       RowBox[{"VBundleOfIndex", "/@", 
        RowBox[{"List", "[", "inds", "]"}]}]}], "\n", ",", "\n", 
      RowBox[{"indsnominus", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"List", "[", "inds", "]"}], ",", 
         RowBox[{
          RowBox[{"-", "a_Symbol"}], "\[Rule]", "a"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}]}], "\n", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"conditions", "=", 
         RowBox[{"Inner", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"auxSubvbundleQ", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"auxVBundleOfIndex", "[", "#2", "]"}]}], "]"}], "&"}], 
           ",", "indsbundles", ",", "indsnominus", ",", "And"}], "]"}]}], 
        "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"ReleaseHold", "[", 
         RowBox[{"ReplaceAll", "[", "\n", 
          RowBox[{
           RowBox[{"Hold", "[", 
            RowBox[{"tens", "/:", 
             RowBox[{
              RowBox[{
               RowBox[{"oper_", "?", "CovDQ"}], "[", "ind1_", "]"}], "[", 
              RowBox[{"tens", "[", "indspattern", "]"}], "]"}], ":=", 
             RowBox[{
              RowBox[{
               RowBox[{"oper", "[", "ind1", "]"}], "[", 
               RowBox[{"tens", "[", "indspattern", "]"}], "]"}], "/;", 
              "conditions"}]}], "]"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"auxSubvbundleQ", "->", "SubvbundleQ"}], ",", 
             RowBox[{"auxVBundleOfIndex", "->", "VBundleOfIndex"}]}], "}"}]}],
           "\n", "]"}], "]"}], ";", "\n", 
        RowBox[{"ReleaseHold", "[", 
         RowBox[{"ReplaceAll", "[", "\n", 
          RowBox[{
           RowBox[{"Hold", "[", 
            RowBox[{"tens", "/:", 
             RowBox[{
              RowBox[{"oper_", "[", "ind1_", "]"}], "[", 
              RowBox[{"tens", "[", "indspattern", "]"}], "]"}], ":=", 
             RowBox[{
              RowBox[{"Zero", "[", "inds", "]"}], "/;", "conditions"}]}], 
            "]"}], ",", "\n", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"auxSubvbundleQ", "->", "SubvbundleQ"}], ",", 
             RowBox[{"auxVBundleOfIndex", "->", "VBundleOfIndex"}]}], "}"}]}],
           "\n", "]"}], "]"}], ";"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"tens", "/:", 
         RowBox[{"oper_", "[", 
          RowBox[{"tens", "[", "ind2patt", "]"}], "]"}], ":=", 
         RowBox[{"Zero", "[", "ind2", "]"}]}], ";"}], "*)"}], "\n", "]"}], 
     ";"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefZero", "[", 
    RowBox[{"tens1_", ",", "tensr__"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DefZero", "[", "tens1", "]"}], ",", 
     RowBox[{"DefZero", "[", "tensr", "]"}]}], "}"}]}], ";"}]}], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.6168600749455547`*^9, 3.616860080923621*^9}, {
   3.616860854935782*^9, 3.616860903442067*^9}, 3.6168610111020803`*^9, 
   3.6168612036178207`*^9, {3.6168612850162277`*^9, 3.616861289201479*^9}, {
   3.616861332061905*^9, 3.616861339922902*^9}, {3.616861878892074*^9, 
   3.616861925762252*^9}, {3.616862026719501*^9, 3.61686207317496*^9}, {
   3.61686394300838*^9, 3.616863979590826*^9}, {3.616864018734687*^9, 
   3.6168641164828176`*^9}, {3.6168641827197227`*^9, 3.616864188324667*^9}, {
   3.616864936986351*^9, 3.616864939630794*^9}, {3.617943588552987*^9, 
   3.617943592656269*^9}, {3.617943680940076*^9, 3.61794371427487*^9}, {
   3.617943762722764*^9, 3.6179438000399513`*^9}, {3.617943836740142*^9, 
   3.6179438445178967`*^9}, {3.617950676480775*^9, 3.617950681003458*^9}, {
   3.617950977807498*^9, 3.617951020402391*^9}, {3.617951067322496*^9, 
   3.617951158235278*^9}, {3.6179511910149307`*^9, 3.617951195593625*^9}, {
   3.6179720038692007`*^9, 3.617972029077005*^9}, 3.617972461210073*^9, 
   3.6180542030049553`*^9, {3.618054451203349*^9, 3.618054593001464*^9}, {
   3.618054644954132*^9, 3.6180547222100163`*^9}, {3.6180551284168253`*^9, 
   3.618055142146209*^9}, {3.618055299505912*^9, 3.61805531731448*^9}, {
   3.618055854384349*^9, 3.618055890628964*^9}, {3.618055942652207*^9, 
   3.6180559632468243`*^9}, {3.618055997031835*^9, 3.618056098891807*^9}, {
   3.6180642382331553`*^9, 3.618064252088694*^9}, {3.618117540555953*^9, 
   3.618117571736298*^9}, {3.618117651200732*^9, 3.6181176993636827`*^9}, {
   3.618117758125121*^9, 3.6181177590350122`*^9}, {3.6181179312843323`*^9, 
   3.618117947146747*^9}, {3.61811888146472*^9, 3.618118881982308*^9}, {
   3.618331419203651*^9, 3.6183314625849543`*^9}, {3.6183315993378887`*^9, 
   3.618331610882914*^9}, {3.618384373387549*^9, 3.6183843760229483`*^9}, {
   3.6183844388901997`*^9, 3.618384440247662*^9}, {3.61839665882204*^9, 
   3.618396662933831*^9}, {3.618411086403584*^9, 3.61841111538972*^9}, {
   3.618411244318351*^9, 3.6184112682495117`*^9}, {3.618411313349395*^9, 
   3.618411323241045*^9}, {3.618411452667557*^9, 3.6184115063879004`*^9}, {
   3.6184115402445593`*^9, 3.618411588233512*^9}, {3.618411686799302*^9, 
   3.61841174288536*^9}, {3.6184118331139097`*^9, 3.6184118443191233`*^9}, {
   3.618411941832226*^9, 3.618412010754236*^9}, {3.618412047530508*^9, 
   3.618412073071477*^9}, {3.618412118137986*^9, 3.618412163374927*^9}, {
   3.618412212345313*^9, 3.618412217582326*^9}, {3.618417326313596*^9, 
   3.618417482371626*^9}, {3.618417521288095*^9, 3.6184175478818502`*^9}, {
   3.6184175954552383`*^9, 3.61841760205805*^9}, {3.6184178935324707`*^9, 
   3.6184179497461157`*^9}, {3.61841802605425*^9, 3.618418048705488*^9}, {
   3.6184181002003717`*^9, 3.618418125791347*^9}, {3.6184195455999107`*^9, 
   3.618419561222578*^9}, {3.618419846281373*^9, 3.618419928962646*^9}, {
   3.618420029864699*^9, 3.618420033683415*^9}, {3.6184200724432497`*^9, 
   3.6184201112943983`*^9}, 3.6184205290808268`*^9, {3.618420687397135*^9, 
   3.618420873126487*^9}, {3.618421061891098*^9, 3.618421065468482*^9}, {
   3.618421563790928*^9, 3.618421638331121*^9}, {3.6184218320137672`*^9, 
   3.618421874392418*^9}, {3.618475255630747*^9, 3.618475411331501*^9}, {
   3.618475514954405*^9, 3.618475517705906*^9}, {3.618475573520082*^9, 
   3.618475593643291*^9}, {3.618476051639368*^9, 3.618476086831092*^9}, {
   3.6184763777711163`*^9, 3.618476379917989*^9}, {3.618476723283464*^9, 
   3.618476729626164*^9}, {3.618476759711529*^9, 3.618476842575036*^9}, {
   3.618476972495253*^9, 3.618476988449006*^9}, {3.618477477390823*^9, 
   3.618477545605695*^9}, {3.618477799764737*^9, 3.618477825265642*^9}, {
   3.618477928131735*^9, 3.6184779368730164`*^9}, 3.618478026167756*^9, {
   3.6184781074495487`*^9, 3.6184781100886993`*^9}, {3.6184784055975657`*^9, 
   3.618478411224615*^9}, {3.6184785256450167`*^9, 3.6184785432453327`*^9}, {
   3.618478592972088*^9, 3.618478613428236*^9}, {3.618478776203188*^9, 
   3.618478798579104*^9}, {3.618478834637559*^9, 3.618478866401004*^9}, {
   3.618478910161528*^9, 3.6184789260583467`*^9}, {3.6184791383379383`*^9, 
   3.61847920659814*^9}, {3.6184793936698427`*^9, 3.618479432604487*^9}, {
   3.618479463640834*^9, 3.6184795182108183`*^9}, {3.618479643565061*^9, 
   3.618479657151968*^9}, {3.6184796902255707`*^9, 3.618479699045253*^9}, {
   3.618479777971551*^9, 3.618479788249009*^9}, {3.618479819978572*^9, 
   3.618479822281165*^9}, {3.6184798607582397`*^9, 3.618479870321864*^9}, {
   3.61848112660205*^9, 3.618481127719001*^9}, {3.618481158975995*^9, 
   3.618481195968568*^9}, {3.618481229715523*^9, 3.618481259078515*^9}, {
   3.6184821569240913`*^9, 3.6184822527307167`*^9}, {3.618482452902383*^9, 
   3.6184824874217577`*^9}, {3.618482528506987*^9, 3.618482590853697*^9}, {
   3.6184826482270947`*^9, 3.618482703774494*^9}, {3.618482774658704*^9, 
   3.6184827832993727`*^9}, {3.618482818160781*^9, 3.6184828829068527`*^9}, {
   3.6184829167542048`*^9, 3.6184829232015142`*^9}, {3.6184829564542313`*^9, 
   3.6184829603899727`*^9}, {3.6184830109932547`*^9, 3.618483029115542*^9}, {
   3.618483065666861*^9, 3.618483066287842*^9}, {3.6184831041398897`*^9, 
   3.618483170983253*^9}, {3.618484056778759*^9, 3.618484063102669*^9}, {
   3.618484156590217*^9, 3.618484184417569*^9}, {3.618484257708506*^9, 
   3.618484258345418*^9}, {3.618484389883513*^9, 3.618484428016614*^9}, {
   3.618484559226706*^9, 3.618484559562242*^9}, {3.618492511031115*^9, 
   3.618492528818123*^9}, {3.6184934554196053`*^9, 3.618493513087227*^9}, {
   3.618494197047689*^9, 3.6184942705760403`*^9}, {3.618495147374605*^9, 
   3.6184953134992323`*^9}, {3.6184953812223186`*^9, 
   3.6184954226448593`*^9}, {3.6184954920124283`*^9, 3.618495515131042*^9}, {
   3.618495549327128*^9, 3.6184955773746967`*^9}, {3.61849570984097*^9, 
   3.618495738402432*^9}, {3.618495833869854*^9, 3.618495860054468*^9}, 
   3.61849608177778*^9, {3.6184962331100407`*^9, 3.61849628588834*^9}, {
   3.618496352715435*^9, 3.618496362786895*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["delta", "Subsubsection",
 CellChangeTimes->{{3.6182015981403017`*^9, 3.6182016028134203`*^9}, {
  3.618214335548807*^9, 3.6182143364452667`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeNewDelta", "[", "funct_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Register", " ", "funct"}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xTensorQ", "[", "funct", "]"}], "^=", "True"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DependenciesOfTensor", "[", "funct", "]"}], "^=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PrintAs", "[", "funct", "]"}], "^=", "\"\<\[Delta]\>\""}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SlotsOfTensor", "[", "funct", "]"}], "^=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "All"}], ",", "All"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MasterOf", "[", "funct", "]"}], "^=", "Symbol"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Dagger", "[", "funct", "]"}], "^=", "funct"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"DU", " ", "funct"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"-", "a_Symbol"}], ",", "a_Symbol"}], "]"}], ":=", 
      RowBox[{"DimOfVBundle", "@", 
       RowBox[{"VBundleOfIndex", "[", "a", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "we", " ", "change", " ", "this", " ", "from", " ", "the", " ", "delta",
        " ", 
       RowBox[{"definition", "!"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f_Symbol", "/;", 
         RowBox[{"f", "===", "Times"}]}], ")"}], "[", 
       RowBox[{"expr1___", ",", 
        RowBox[{"funct", "[", 
         RowBox[{
          RowBox[{"-", "a_Symbol"}], ",", "b_Symbol"}], "]"}], ",", 
        "expr2___"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ReplaceIndex", "[", 
        RowBox[{
         RowBox[{"expr1", " ", "expr2"}], ",", 
         RowBox[{
          RowBox[{"-", "b"}], "\[Rule]", 
          RowBox[{"-", "a"}]}]}], "]"}], "/;", 
       RowBox[{
        RowBox[{"IsIndexOf", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", 
          RowBox[{"-", "b"}], ",", "funct"}], "]"}], "&&", 
        RowBox[{"SubvbundleQ", "[", 
         RowBox[{
          RowBox[{"VBundleOfIndex", "[", "b", "]"}], ",", 
          RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f_Symbol", "/;", 
         RowBox[{"f", "===", "Times"}]}], ")"}], "[", 
       RowBox[{"expr1___", ",", 
        RowBox[{"funct", "[", 
         RowBox[{
          RowBox[{"-", "a_Symbol"}], ",", "b_Symbol"}], "]"}], ",", 
        "expr2___"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ReplaceIndex", "[", 
        RowBox[{
         RowBox[{"expr1", " ", "expr2"}], ",", 
         RowBox[{"a", "\[Rule]", "b"}]}], "]"}], "/;", 
       RowBox[{
        RowBox[{"IsIndexOf", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", "a", ",", "funct"}], "]"}], "&&", 
        RowBox[{"SubvbundleQ", "[", 
         RowBox[{
          RowBox[{"VBundleOfIndex", "[", "a", "]"}], ",", 
          RowBox[{"VBundleOfIndex", "[", "b", "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a_", ",", 
        RowBox[{"b", ":", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Symbol"}], "}"}]}]}], "]"}], ":=", 
      RowBox[{"Basis", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"a", ":", 
         RowBox[{"{", 
          RowBox[{"_", ",", 
           RowBox[{"-", "_Symbol"}]}], "}"}]}], ",", "b_"}], "]"}], ":=", 
      RowBox[{"Basis", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a", ",", 
        RowBox[{"b", ":", 
         RowBox[{
          RowBox[{"_", "?", "BasisQ"}], "[", "_", "]"}]}]}], "]"}], ":=", 
      RowBox[{"Basis", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"a", ":", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"_", "?", "BasisQ"}], "[", "_", "]"}]}]}], ",", "b_"}], 
       "]"}], ":=", 
      RowBox[{"Basis", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"_", "?", "FirstDerQ"}], ")"}], "[", 
       RowBox[{"funct", "[", 
        RowBox[{
         RowBox[{"-", "_Symbol"}], ",", "_Symbol"}], "]"}], "]"}], ":=", 
      "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ParamD", "[", "__", "]"}], "[", 
       RowBox[{"funct", "[", 
        RowBox[{
         RowBox[{"-", "_Symbol"}], ",", "_Symbol"}], "]"}], "]"}], ":=", 
      "0"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"UD", " ", 
       RowBox[{"funct", ".", " ", "Use"}], " ", "SymmetryOfIndex"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a_Symbol", ",", 
        RowBox[{"-", "a_Symbol"}]}], "]"}], ":=", 
      RowBox[{
       RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "a", "]"}], " ", 
       RowBox[{"DimOfVBundle", "@", 
        RowBox[{"VBundleOfIndex", "[", "a", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"G", ":", " ", 
       RowBox[{
       "we", " ", "change", " ", "this", " ", "from", " ", "the", " ", 
        "delta", " ", 
        RowBox[{"definition", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f_Symbol", "/;", 
         RowBox[{"f", "===", "Times"}]}], ")"}], "[", 
       RowBox[{"expr1___", ",", 
        RowBox[{"funct", "[", 
         RowBox[{"a_Symbol", ",", 
          RowBox[{"-", "b_Symbol"}]}], "]"}], ",", "expr2___"}], "]"}], ":=", 
      
      RowBox[{
       RowBox[{
        RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "a", "]"}], " ", 
        
        RowBox[{"ReplaceIndex", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", 
          RowBox[{"b", "\[Rule]", "a"}]}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"IsIndexOf", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", "b", ",", "funct"}], "]"}], "&&", 
        RowBox[{"SubvbundleQ", "[", 
         RowBox[{
          RowBox[{"VBundleOfIndex", "[", "b", "]"}], ",", 
          RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f_Symbol", "/;", 
         RowBox[{"f", "===", "Times"}]}], ")"}], "[", 
       RowBox[{"expr1___", ",", 
        RowBox[{"funct", "[", 
         RowBox[{"a_Symbol", ",", 
          RowBox[{"-", "b_Symbol"}]}], "]"}], ",", "expr2___"}], "]"}], ":=", 
      
      RowBox[{
       RowBox[{
        RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "a", "]"}], " ", 
        
        RowBox[{"ReplaceIndex", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", 
          RowBox[{
           RowBox[{"-", "a"}], "\[Rule]", 
           RowBox[{"-", "b"}]}]}], "]"}]}], "/;", 
       RowBox[{
        RowBox[{"IsIndexOf", "[", 
         RowBox[{
          RowBox[{"expr1", " ", "expr2"}], ",", 
          RowBox[{"-", "a"}], ",", "funct"}], "]"}], "&&", 
        RowBox[{"SubvbundleQ", "[", 
         RowBox[{
          RowBox[{"VBundleOfIndex", "[", "a", "]"}], ",", 
          RowBox[{"VBundleOfIndex", "[", "b", "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a_", ",", 
        RowBox[{"b", ":", 
         RowBox[{"{", 
          RowBox[{"_", ",", 
           RowBox[{"-", "_Symbol"}]}], "}"}]}]}], "]"}], ":=", 
      RowBox[{
       RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "a", "]"}], " ", 
       RowBox[{"Basis", "[", 
        RowBox[{"b", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"a", ":", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Symbol"}], "}"}]}], ",", "b_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "b", "]"}], " ", 
       RowBox[{"Basis", "[", 
        RowBox[{"b", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a_", ",", 
        RowBox[{"b", ":", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"_", "?", "BasisQ"}], "[", "_", "]"}]}]}]}], "]"}], ":=", 
      RowBox[{
       RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "a", "]"}], " ", 
       RowBox[{"Basis", "[", 
        RowBox[{"b", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"a", ":", 
         RowBox[{
          RowBox[{"_", "?", "BasisQ"}], "[", "_", "]"}]}], ",", "b_"}], "]"}],
       ":=", 
      RowBox[{
       RowBox[{"xAct`xTensor`Private`SymmetryOfIndex", "[", "b", "]"}], " ", 
       RowBox[{"Basis", "[", 
        RowBox[{"b", ",", "a"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"funct", "/:", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"_", "?", "FirstDerQ"}], ")"}], "[", 
       RowBox[{"funct", "[", 
        RowBox[{"_Symbol", ",", 
         RowBox[{"-", "_Symbol"}]}], "]"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ParamD", "[", "__", "]"}], "[", 
       RowBox[{"funct", "[", 
        RowBox[{"_Symbol", ",", 
         RowBox[{"-", "_Symbol"}]}], "]"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Symmetry", " ", "of", " ", "funct", " ", "is", " ", "symmetry", " ", 
       "of", " ", "metric"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"SymmetryGroupOfTensor", "[", 
       RowBox[{"funct", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], "]"}], "^:=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"metric", "=", 
          RowBox[{"xAct`xTensor`Private`FirstMetricOfVBundle", "[", 
           RowBox[{
            RowBox[{"VBundleOfIndex", "[", "a", "]"}], ",", "False"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"metric", "===", "Null"}], ",", 
          RowBox[{"StrongGenSet", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"GenSet", "[", "]"}]}], "]"}], ",", 
          RowBox[{"SymmetryGroupOfTensor", "[", "metric", "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Conversion", " ", "to", " ", "metric", " ", "if", " ", "both", " ", 
       "indices", " ", "are", " ", "abstract", " ", "and", " ", "have", " ", 
       "same", " ", "height"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{"a_Symbol", ",", "b_Symbol"}], "]"}], ":=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"metric", "=", 
          RowBox[{"xAct`xTensor`Private`FirstMetricOfVBundle", "[", 
           RowBox[{
            RowBox[{"VBundleOfIndex", "[", "a", "]"}], ",", "True"}], "]"}]}],
          "}"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "xAct`xTensor`Private`SymmetryOfMetric", "[", "metric", "]"}], "=!=",
             "1"}], ",", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"funct", "::", "warning"}], ",", 
             RowBox[{"\"\<funct converted into non-symmetric \>\"", "<>", 
              RowBox[{"ToString", "[", "metric", "]"}]}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"metric", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"funct", "[", 
       RowBox[{
        RowBox[{"-", "a_Symbol"}], ",", 
        RowBox[{"-", "b_Symbol"}]}], "]"}], ":=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"metric", "=", 
          RowBox[{"xAct`xTensor`Private`FirstMetricOfVBundle", "[", 
           RowBox[{
            RowBox[{"VBundleOfIndex", "[", "a", "]"}], ",", "True"}], "]"}]}],
          "}"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "xAct`xTensor`Private`SymmetryOfMetric", "[", "metric", "]"}], "=!=",
             "1"}], ",", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"funct", "::", "warning"}], ",", 
             RowBox[{"\"\<funct converted into non-symmetric \>\"", "<>", 
              RowBox[{"ToString", "[", "metric", "]"}]}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"metric", "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Protection", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"SetNumberOfArguments", "[", 
      RowBox[{"funct", ",", "2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"funct", ",", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"ReadProtected", ",", "Protected"}], "*)"}], "}"}]}], "]"}], 
     ";", "\n", "funct"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.618224345739835*^9, 3.618224410951288*^9}, {
   3.618224657152069*^9, 3.618224672935854*^9}, {3.618225081231627*^9, 
   3.618225083435926*^9}, {3.618225183249506*^9, 3.618225261384939*^9}, {
   3.6182255198341084`*^9, 3.618225595822578*^9}, {3.618225853266094*^9, 
   3.618225861798656*^9}, 3.618226080023896*^9, {3.618226255637485*^9, 
   3.6182262589091387`*^9}, {3.618226290845812*^9, 3.6182263758333693`*^9}, {
   3.618226408055456*^9, 3.61822640951283*^9}, 3.6182264597938337`*^9, {
   3.618226500530423*^9, 3.618226527468277*^9}, {3.618229563448007*^9, 
   3.6182295748516283`*^9}, {3.61822960527555*^9, 3.618229645727566*^9}, {
   3.6182298188488703`*^9, 3.618229819058324*^9}, {3.618229871409205*^9, 
   3.618229923955977*^9}, {3.618229990784878*^9, 3.618230071104982*^9}, {
   3.618230140470725*^9, 3.618230232355665*^9}, {3.618230407645439*^9, 
   3.6182304081422377`*^9}, {3.618230998942342*^9, 3.61823103066613*^9}, {
   3.6182310870251083`*^9, 3.6182311012555103`*^9}, {3.618305365129302*^9, 
   3.618305367541643*^9}, {3.618306249543006*^9, 3.618306263951117*^9}, {
   3.618307015690051*^9, 3.618307038952696*^9}}],

Cell["\<\
We will use our own delta function that avoids the bug when subvector spaces \
are present. Alternatively we could redefine delta..\
\>", "Text",
 CellChangeTimes->{{3.6182314200377693`*^9, 3.618231440833048*^9}, {
  3.61823147408419*^9, 3.6182314855575523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeNewDelta", "[", "IdDelta", "]"}]], "Code",
 CellChangeTimes->{{3.618231447551387*^9, 3.618231469644663*^9}}],

Cell[BoxData["IdDelta"], "Output",
 CellChangeTimes->{
  3.618305371774858*^9, 3.6183166547304363`*^9, 3.6183355183920927`*^9, 
   3.618335602175914*^9, {3.618335651841462*^9, 3.618335652317384*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Automated DefVMetric", "Subsubsection",
 CellChangeTimes->{{3.618201583878254*^9, 3.618201591070347*^9}, {
  3.618238073301322*^9, 3.61823810017022*^9}, {3.618330646435676*^9, 
  3.618330649398718*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefVMetricCheck", "::", "notsym"}], "=", 
   "\"\<not symmetric tensor used\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefVMetricCheck", "::", "notcomp"}], "=", 
   "\"\<tensor indices do not match\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefVMetricCheck", "::", "def"}], "=", 
   "\"\<metric has already been defined\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.618287627965212*^9, 3.618287646086361*^9}, {
  3.618287687521811*^9, 3.618287700165916*^9}, {3.61829071952542*^9, 
  3.618290720994966*^9}, {3.618290797871739*^9, 3.618290801776031*^9}, {
  3.618290960232628*^9, 3.618290996703958*^9}, {3.6182914269013033`*^9, 
  3.6182914601153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefVMetricCheck", "[", 
   RowBox[{"signdet_", ",", 
    RowBox[{"metric_", "[", 
     RowBox[{
      RowBox[{"-", "ind1_"}], ",", 
      RowBox[{"-", "ind2_"}]}], "]"}], ",", "odeps_", ",", "eoib_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "vb", "}"}], ",", "\n", 
    RowBox[{"(*", " ", 
     RowBox[{
     "does", " ", "not", " ", "assume", " ", "metric", " ", "exists"}], " ", 
     "*)"}], "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AbstractIndexQ", "[", "ind1", "]"}]}], ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "unknown"}], ",", 
          "\"\<abstract index\>\"", ",", "ind1"}], "]"}]}]}], "]"}], ";", 
     "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AbstractIndexQ", "[", "ind2", "]"}]}], ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "unknown"}], ",", 
          "\"\<abstract index\>\"", ",", "ind2"}], "]"}]}]}], "]"}], ";", 
     "\n", 
     RowBox[{"vb", "=", 
      RowBox[{"VBundleOfIndex", "[", "ind1", "]"}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vb", "=!=", 
        RowBox[{"VBundleOfIndex", "[", "ind2", "]"}]}], ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "inds"}], ",", "ind1", ",", " ", 
          "ind2"}], "]"}]}]}], "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MetricEndowedQ", "[", "vb", "]"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"DefMetric", "::", "old"}], ",", 
         RowBox[{"MetricsOfVBundle", "[", "vb", "]"}], ",", "vb"}], "]"}]}], 
      "]"}], ";", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{"ManifoldQ", "[", "#", "]"}], ",", 
            RowBox[{"ParameterQ", "[", "#", "]"}]}], "]"}]}], ",", 
         RowBox[{"Throw", "@", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"DefMetric", "::", "unknown"}], ",", "\"\<dependency\>\"",
             ",", "#"}], "]"}]}]}], "]"}], "&"}], "/@", "odeps"}], ";", "\n", 
     
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ValidateSymbolInSession", "[", "metric", "]"}], ";"}], " ", 
      "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"not", " ", "needed"}], ",", " ", 
       RowBox[{
        RowBox[{"checks", " ", "against", " ", "user"}], "-", "defined"}]}], 
      " ", "*)"}], "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"signdet", " ", "accepts", " ", "0"}], ",", " ", "1", ",", " ", 
       RowBox[{"or", " ", 
        RowBox[{"{", 
         RowBox[{"p", ",", "q", ",", "r"}], "}"}]}]}], "*)"}], "\n", 
     RowBox[{"Which", "[", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "signdet", "]"}], "===", "1"}], ",", "Null", ",", 
       "\n", 
       RowBox[{"signdet", "===", "0"}], ",", "Null", ",", "\n", 
       RowBox[{"MatchQ", "[", 
        RowBox[{"signdet", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"_Integer", "?", "NonNegative"}], ",", 
           RowBox[{"_Integer", "?", "NonNegative"}], ",", 
           RowBox[{"_Integer", "?", "NonNegative"}]}], "}"}]}], "]"}], ",", 
       "Null", ",", "\n", "True", ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "invalid"}], ",", "signdet", ",", 
          "\"\<signdet of metric\>\""}], "]"}]}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "epsilon", " ", "orientation", " ", "in", " ", "a", " ", "basis"}], " ",
       "*)"}], "\n", 
     RowBox[{"Which", "[", "\n", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "eoib", "]"}], "=!=", "List"}], "||", 
        RowBox[{
         RowBox[{"Length", "[", "eoib", "]"}], "=!=", "2"}]}], ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "invalid"}], ",", "eoib", ",", 
          "\"\<value for option epsilonOrientationInMetric\>\""}], "]"}]}], 
       ",", "\n", 
       RowBox[{"!", 
        RowBox[{"BasisQ", "[", 
         RowBox[{"eoib", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"DefMetric", "::", "unknown"}], ",", "\"\<basis\>\"", ",", 
          RowBox[{"eoib", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", "\n", "_", ",", 
       "Null"}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{"ValidateSymbol", "[", "metric", "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "checks", " ", "against", " ", "system", " ", "and", " ", "other", " ", 
       "packages"}], " ", "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"xTensorQ", "[", "metric", "]"}], ",", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SymmetryGroupOfTensor", "[", "metric", "]"}], "=!=", 
           RowBox[{"StrongGenSet", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"GenSet", "[", 
              InterpretationBox[
               StyleBox[
                RowBox[{"(", "1", ",", "2", ")"}],
                ShowAutoStyles->False,
                AutoSpacing->False],
               xAct`xPerm`Cycles[{1, 2}],
               Editable->False], "]"}]}], "]"}]}], ",", 
          RowBox[{"Throw", "@", 
           RowBox[{"Message", "[", 
            RowBox[{"DefVMetricCheck", "::", "notsym"}], "]"}]}]}], "]"}], 
        ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SlotsOfTensor", "[", "metric", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=!=", "vb"}], ",", 
          RowBox[{"Throw", "@", 
           RowBox[{"Message", "[", 
            RowBox[{"DefVMetricCheck", "::", "notcomp"}], "]"}]}]}], "]"}], 
        ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"$Metrics", ",", "metric"}], "]"}], ",", 
          RowBox[{"Throw", "@", 
           RowBox[{"Message", "[", 
            RowBox[{"DefVMetricCheck", "::", "def"}], "]"}]}]}], "]"}]}]}], 
      "\n", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.6182315444043493`*^9, 3.618231553112323*^9}, {
   3.618231655540547*^9, 3.618231716472499*^9}, {3.618231804610095*^9, 
   3.6182318730029163`*^9}, {3.618231955119487*^9, 3.618231968662066*^9}, {
   3.618232016768382*^9, 3.61823202014425*^9}, {3.6182321604135857`*^9, 
   3.618232164548587*^9}, {3.618232222763956*^9, 3.618232231523569*^9}, 
   3.618236166427087*^9, {3.618236598127027*^9, 3.618236616233877*^9}, {
   3.618236678647395*^9, 3.618236709435381*^9}, {3.618236832572414*^9, 
   3.61823683334971*^9}, {3.6182369012131577`*^9, 3.618236903074422*^9}, {
   3.618237061813222*^9, 3.618237068163581*^9}, {3.618237807301209*^9, 
   3.6182378478412848`*^9}, {3.618237903781547*^9, 3.618237904290597*^9}, {
   3.618237939118004*^9, 3.618237939882617*^9}, {3.618238689918779*^9, 
   3.618238693292716*^9}, {3.618241835820842*^9, 3.618241842692565*^9}, {
   3.618246963469665*^9, 3.6182469669851103`*^9}, {3.618247022783545*^9, 
   3.618247215705859*^9}, {3.6182473792787333`*^9, 3.6182473837296352`*^9}, {
   3.618247683912875*^9, 3.6182476936615257`*^9}, {3.618286071938064*^9, 
   3.61828609221544*^9}, {3.618286122331793*^9, 3.618286148411965*^9}, {
   3.61828624310452*^9, 3.618286273256597*^9}, {3.618286332176958*^9, 
   3.6182863375294437`*^9}, {3.61828639276015*^9, 3.618286393764247*^9}, {
   3.6182866312947407`*^9, 3.618286638177411*^9}, 3.618286683148829*^9, {
   3.618286721914713*^9, 3.6182867350866337`*^9}, {3.6182869374490833`*^9, 
   3.618286951369873*^9}, {3.618287426156687*^9, 3.618287428036725*^9}, {
   3.618287481616611*^9, 3.618287519928146*^9}, {3.618287550583661*^9, 
   3.618287559566186*^9}, {3.618287602224329*^9, 3.618287624461389*^9}, {
   3.6182877076041927`*^9, 3.618287748154068*^9}, {3.61828778203529*^9, 
   3.618287870317279*^9}, {3.618288149975225*^9, 3.618288161762267*^9}, {
   3.618288210685169*^9, 3.61828822121832*^9}, {3.618288255988072*^9, 
   3.618288296904623*^9}, {3.6182883665281887`*^9, 3.618288421045259*^9}, {
   3.618288606110244*^9, 3.6182886686852818`*^9}, {3.618288904798526*^9, 
   3.6182889078294764`*^9}, {3.618289125917266*^9, 3.618289140907148*^9}, 
   3.618290241876967*^9, {3.6182904864366713`*^9, 3.618290515541192*^9}, {
   3.618290548931385*^9, 3.618290555754318*^9}, {3.6182906674748907`*^9, 
   3.6182907113828163`*^9}, {3.618290818270207*^9, 3.618290883521295*^9}, {
   3.618290934058559*^9, 3.618290955939172*^9}, 3.6182910275455627`*^9, {
   3.618291464185556*^9, 3.618291531894362*^9}, {3.618335750018972*^9, 
   3.618335751728224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Unprotect", "[", "DefVMetric", "]"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"RuleDelayed", "::", "rhs"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Options", "[", "DefVMetric", "]"}], ":=", 
  RowBox[{"{", "\n", 
   RowBox[{
    RowBox[{"PrintAs", "->", "Identity"}], ",", "\n", 
    RowBox[{"OtherDependencies", "->", 
     RowBox[{"{", "}"}]}], ",", "\n", 
    RowBox[{"epsilonOrientationInBasis", ":>", 
     RowBox[{"{", 
      RowBox[{"AIndex", ",", "$epsilonSign"}], "}"}]}], ",", "\n", 
    RowBox[{"Master", "->", "Null"}], ",", "\n", 
    RowBox[{"ProtectNewSymbol", ":>", "$ProtectNewSymbols"}], ",", "\n", 
    RowBox[{"DefInfo", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefVMetric", "[", 
    RowBox[{"signdet_", ",", 
     RowBox[{"metric_", "[", 
      RowBox[{
       RowBox[{"-", "ind1_"}], ",", 
       RowBox[{"-", "ind2_"}]}], "]"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Catch", "@", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"vbundle", "=", 
        RowBox[{"VBundleOfIndex", "[", "ind1", "]"}]}], "}"}], ",", "\n", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "covdsymbol", ",", "odeps", ",", "eoib", ",", "pns", ",", "info", 
          ",", "frozenQ", ",", "firstQ", ",", "invertQ", ",", "LCmetric"}], 
         "}"}], ",", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"Options", " ", "and", " ", "checks"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"odeps", ",", "eoib", ",", "pns", ",", "info"}], "}"}], 
          "=", 
          RowBox[{"OptionValue", "[", 
           RowBox[{"DefVMetric", ",", 
            RowBox[{"{", "options", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "OtherDependencies", ",", "epsilonOrientationInBasis", ",", 
              "ProtectNewSymbol", ",", "DefInfo"}], "}"}]}], "]"}]}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", "checks", " ", "*)"}], "\n", 
         RowBox[{"DefVMetricCheck", "[", 
          RowBox[{"signdet", ",", 
           RowBox[{"metric", "[", 
            RowBox[{
             RowBox[{"-", "ind1"}], ",", 
             RowBox[{"-", "ind2"}]}], "]"}], ",", "odeps", ",", "eoib"}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"firstQ", "=", 
          RowBox[{
           RowBox[{"MetricsOfVBundle", "[", "vbundle", "]"}], "===", 
           RowBox[{"{", "}"}]}]}], ";", "\n", 
         RowBox[{"frozenQ", "=", 
          RowBox[{"!", "firstQ"}]}], ";", "\n", "\n", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", 
            RowBox[{
             RowBox[{"manifold", "=", 
              RowBox[{"BaseOfVBundle", "[", "vbundle", "]"}]}], ",", "\n", 
             RowBox[{"deps", "=", 
              RowBox[{"Union", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"BaseOfVBundle", "[", "vbundle", "]"}], "}"}], ",", 
                "odeps"}], "]"}]}], ",", "\n", 
             RowBox[{"(*", 
              RowBox[{
              "these", " ", "two", " ", "functions", " ", "add", " ", 
               "symbols", " ", "to", " ", "names"}], "*)"}], "\n", 
             RowBox[{"vbpmQ", "=", 
              RowBox[{
              "xAct`xTensor`Private`VBundleIndexPMQ", "[", "vbundle", "]"}]}],
              ",", "\n", 
             RowBox[{"invmetric", "=", 
              RowBox[{"If", "[", 
               RowBox[{"frozenQ", ",", 
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"Inv", ",", "metric"}], "]"}], ",", "metric"}], 
               "]"}]}]}], "}"}], ",", "\n", "\n", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Avoid", " ", "messages", " ", "from", " ", "options", " ", "of", 
             " ", "DefMetric", " ", "not", " ", "accepted", " ", "in", " ", 
             "DefTensor", " ", "or", " ", "DefCovD"}], " ", "*)"}], "\n", 
           RowBox[{
            RowBox[{"Off", "[", 
             RowBox[{"OptionValue", "::", "nodef"}], "]"}], ";", "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"define", " ", "metric", " ", "if", " ", "DNE"}], " ", 
             "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"xTensorQ", "[", "metric", "]"}]}], ",", "\n", 
              RowBox[{"DefTensor", "[", 
               RowBox[{
                RowBox[{"metric", "[", 
                 RowBox[{
                  RowBox[{"-", "ind1"}], ",", 
                  RowBox[{"-", "ind2"}]}], "]"}], ",", "deps", ",", 
                RowBox[{"Symmetric", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", "\n", 
                RowBox[{"ProtectNewSymbol", "->", "False"}], ",", "\n", 
                RowBox[{"DefInfo", ":>", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"info", "===", "False"}], ",", "False", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<symmetric fiber metric tensor\>\"", ",", 
                    "\"\<\>\""}], "}"}]}], "]"}]}], ",", "\n", "options"}], 
               "]"}]}], "]"}], ";", "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"MakexTensions", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"see", " ", "xTension"}], ")"}], "."}]}], " ", "*)"}],
             "\n", 
            RowBox[{"MakexTensions", "[", 
             RowBox[{
             "DefVMetric", ",", "\"\<Beginning\>\"", ",", "signdet", ",", 
              RowBox[{"metric", "[", 
               RowBox[{
                RowBox[{"-", "ind1"}], ",", 
                RowBox[{"-", "ind2"}]}], "]"}], ",", "options"}], "]"}], ";", 
            "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Register", " ", "structure"}], " ", "*)"}], "\n", 
            RowBox[{"AppendToUnevaluated", "[", 
             RowBox[{"$Metrics", ",", "metric"}], "]"}], ";", "\n", 
            RowBox[{
             RowBox[{"MetricQ", "[", "metric", "]"}], "^=", "True"}], ";", 
            "\n", 
            RowBox[{
             RowBox[{"VBundleOfMetric", "[", "metric", "]"}], "^=", 
             "vbundle"}], ";", "\n", 
            RowBox[{"xUpAppendTo", "[", 
             RowBox[{
              RowBox[{"MetricsOfVBundle", "[", "vbundle", "]"}], ",", 
              "metric"}], "]"}], ";", "\n", "\n", 
            RowBox[{"(*", " ", "Signature", " ", "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "signdet", "]"}], "===", "List"}], "&&", 
               
               RowBox[{
                RowBox[{"Length", "[", "signdet", "]"}], "===", "3"}]}], ",", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"SignatureOfMetric", "[", "metric", "]"}], "^=", 
                "signdet"}], ";", "\n", 
               RowBox[{
                RowBox[{"SignDetOfMetric", "[", "metric", "]"}], "^=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"signdet", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "===", "0"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", 
                   RowBox[{"signdet", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "0"}], "]"}]}]}], 
              ",", "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"SignDetOfMetric", "[", "metric", "]"}], "^=", 
                "signdet"}], ";"}]}], "\n", "]"}], ";", "\[IndentingNewLine]",
             "\n", 
            RowBox[{"(*", " ", 
             RowBox[{"Define", " ", "Inverse"}], " ", "*)"}], "\n", 
            RowBox[{"invertQ", "=", 
             RowBox[{
              RowBox[{"SignDetOfMetric", "[", "metric", "]"}], "=!=", "0"}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"invertQ", ",", "\n", 
              RowBox[{"If", "[", 
               RowBox[{"frozenQ", ",", "\n", 
                RowBox[{"DefTensor", "[", 
                 RowBox[{
                  RowBox[{"invmetric", "[", 
                   RowBox[{"ind1", ",", "ind2"}], "]"}], ",", "deps", ",", 
                  RowBox[{"Symmetric", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", "\n", 
                  RowBox[{"ProtectNewSymbol", "->", "False"}], ",", "\n", 
                  RowBox[{"Master", "->", "metric"}], ",", "\n", 
                  RowBox[{"DefInfo", ":>", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"info", "===", "False"}], ",", "False", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<inverse metric tensor\>\"", ",", 
                    "\"\<Metric is frozen!\>\""}], "}"}]}], "]"}]}], ",", 
                  "\n", 
                  RowBox[{"TensorID", "->", 
                   RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`InvMetric", ",", "metric"}],
                     "}"}]}], ",", "\n", 
                  RowBox[{"PrintAs", ":>", 
                   RowBox[{"GiveOutputString", "[", 
                    RowBox[{"Inv", ",", "metric"}], "]"}]}], ",", "\n", 
                  "options"}], "]"}], ",", "\n", 
                RowBox[{
                 RowBox[{"Inv", "[", "metric", "]"}], "^=", "metric"}]}], 
               "\n", "]"}], ",", "\n", 
              RowBox[{
              "Print", "[", 
               "\"\<** DefMetric: non-invertible metric being defined! \
Dangerous!\>\"", "]"}]}], "\n", "]"}], ";", "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Directional", " ", "indices", " ", "are", " ", "not", " ", 
              "allowed", " ", "in", " ", 
              RowBox[{"metrics", ".", " ", "Why"}], " ", "only", " ", "for", 
              " ", "first", " ", 
              RowBox[{"metrics", "?"}]}], " ", "*)"}], "\n", 
            RowBox[{"If", "[", 
             RowBox[{"firstQ", ",", "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"metric", "[", 
                 RowBox[{
                  RowBox[{"Dir", "[", "expr_", "]"}], ",", "b_"}], "]"}], ":=", 
                RowBox[{"ReplaceIndex", "[", 
                 RowBox[{"expr", ",", 
                  RowBox[{
                   RowBox[{
                   "xAct`xTensor`Private`UltraindexOf", "[", "expr", "]"}], "->",
                    "b"}]}], "]"}]}], ";", "\n", 
               RowBox[{
                RowBox[{"metric", "[", 
                 RowBox[{"a_", ",", 
                  RowBox[{"Dir", "[", "expr_", "]"}]}], "]"}], ":=", 
                RowBox[{"ReplaceIndex", "[", 
                 RowBox[{"expr", ",", 
                  RowBox[{
                   RowBox[{
                   "xAct`xTensor`Private`UltraindexOf", "[", "expr", "]"}], "->",
                    "a"}]}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"Define", " ", "epsilon", " ", "tensor"}], ",", " ", 
              RowBox[{"with", " ", "covariant", " ", 
               RowBox[{"indices", ".", " ", "Do"}], " ", "not", " ", 
               "protect", " ", "symbol"}]}], " ", "*)"}], "\n", 
            RowBox[{
             RowBox[{"DefVEpsilonOfMetric", "[", 
              RowBox[{"metric", ",", "vbundle", ",", "eoib", ",", "frozenQ"}],
               "]"}], "\n", "\n", 
             RowBox[{"(*", " ", 
              RowBox[{"Self", "-", "contractions"}], " ", "*)"}], "\n", 
             RowBox[{"MakeLinearMetric", "[", 
              RowBox[{
              "metric", ",", "invmetric", ",", "IdDelta", ",", "vbundle", ",",
                "firstQ"}], "]"}], "\n", "\n", 
             RowBox[{"(*", " ", 
              RowBox[{"Determinant", " ", "in", " ", "the", " ", "basis", " ", 
               RowBox[{"AIndex", ".", " ", "Has"}], " ", "to", " ", "be", " ",
                "defined", " ", "after", " ", "the", " ", "covd", " ", "and", 
               " ", "the", " ", "invmetric"}], " ", "*)"}], "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"info", "===", "False"}], ",", "\n", 
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"$DefInfoQ", "=", "False"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"Determinant", "[", 
                   RowBox[{"metric", ",", "AIndex"}], "]"}], "[", "]"}]}], 
                "]"}], ",", "\n", 
               RowBox[{
                RowBox[{"Determinant", "[", 
                 RowBox[{"metric", ",", "AIndex"}], "]"}], "[", "]"}]}], "\n",
               "]"}]}], ";", "\n", "\n", 
            RowBox[{"MakexTensions", "[", 
             RowBox[{"DefVMetric", ",", "\"\<End\>\"", ",", "signdet", ",", 
              RowBox[{"metric", "[", 
               RowBox[{
                RowBox[{"-", "ind1"}], ",", 
                RowBox[{"-", "ind2"}]}], "]"}], ",", "options"}], "]"}], ";", 
            "\n", "\n", 
            RowBox[{"On", "[", 
             RowBox[{"OptionValue", "::", "nodef"}], "]"}], ";", "\n", "\n", 
            RowBox[{"If", "[", 
             RowBox[{"pns", ",", 
              RowBox[{"Protect", "[", "metric", "]"}]}], "]"}], ";"}]}], "\n",
           "]"}]}]}], "\n", "]"}]}], "\n", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefVMetric", "[", 
    RowBox[{"_", ",", "metric_", ",", "_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"DefMetric", "::", "invalid"}], ",", "metric", ",", 
     "\"\<metric\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetNumberOfArguments", "[", 
   RowBox[{"DefVMetric", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "Infinity"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "DefVMetric", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"On", "[", 
   RowBox[{"RuleDelayed", "::", "rhs"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.618201779976156*^9, 3.618201785771365*^9}, {
   3.618202196052984*^9, 3.61820222245249*^9}, {3.618202265554014*^9, 
   3.618202305558085*^9}, {3.6182024244302473`*^9, 3.61820242507089*^9}, {
   3.618202692759254*^9, 3.6182027195071783`*^9}, {3.618202765715335*^9, 
   3.6182027755230227`*^9}, {3.618202898235505*^9, 3.618202939342008*^9}, {
   3.618203060498702*^9, 3.618203116262766*^9}, {3.618203518724937*^9, 
   3.618203527491209*^9}, {3.618203744610003*^9, 3.61820375288417*^9}, {
   3.618203831545755*^9, 3.618203861239894*^9}, {3.618203894338325*^9, 
   3.6182038977261143`*^9}, {3.618204157398809*^9, 3.618204179534112*^9}, {
   3.6182056441316023`*^9, 3.6182056451461153`*^9}, {3.6182057626037207`*^9, 
   3.6182058099681187`*^9}, {3.618205970757449*^9, 3.618206071743587*^9}, {
   3.618206113489666*^9, 3.618206115850659*^9}, {3.618206335325392*^9, 
   3.618206346088736*^9}, 3.618206440294778*^9, {3.618206476272614*^9, 
   3.618206478547701*^9}, {3.618206523952736*^9, 3.618206546342362*^9}, {
   3.618207346988553*^9, 3.618207361621283*^9}, {3.6182074472573767`*^9, 
   3.618207460547463*^9}, {3.618207560693178*^9, 3.6182075981811457`*^9}, {
   3.618207679600202*^9, 3.618207687760268*^9}, {3.618207929575616*^9, 
   3.618207933338839*^9}, {3.618207996012108*^9, 3.618208003294754*^9}, {
   3.618208058705143*^9, 3.6182080962978973`*^9}, {3.6182083833930473`*^9, 
   3.618208392403254*^9}, {3.618208506087833*^9, 3.618208520132477*^9}, {
   3.618208551099393*^9, 3.6182085563234673`*^9}, {3.618208663315486*^9, 
   3.6182086888824797`*^9}, {3.618210076006617*^9, 3.618210094622252*^9}, {
   3.618210134352497*^9, 3.618210137674712*^9}, {3.618210345516509*^9, 
   3.6182103771426888`*^9}, {3.618210454492133*^9, 3.6182104592805853`*^9}, {
   3.618210517920518*^9, 3.618210531604137*^9}, {3.618238057917098*^9, 
   3.618238069892584*^9}, {3.618238103380601*^9, 3.618238131125992*^9}, {
   3.6182381794387712`*^9, 3.618238188175035*^9}, {3.618238237331276*^9, 
   3.618238300791074*^9}, {3.618238585856205*^9, 3.618238643919697*^9}, 
   3.618238739360442*^9, {3.6182420137726517`*^9, 3.618242154185817*^9}, {
   3.618242252317541*^9, 3.6182423303956842`*^9}, {3.618242421304648*^9, 
   3.61824242218989*^9}, {3.618242499575384*^9, 3.618242527138349*^9}, {
   3.618242569007298*^9, 3.618242624818036*^9}, {3.618242676184434*^9, 
   3.618242709383078*^9}, {3.618242817292433*^9, 3.61824282382008*^9}, {
   3.618242903282205*^9, 3.6182429398468847`*^9}, {3.6182433383124638`*^9, 
   3.618243340555546*^9}, {3.618243387112273*^9, 3.618243421798903*^9}, {
   3.618243559955202*^9, 3.618243576656225*^9}, {3.618243620287498*^9, 
   3.618243703911381*^9}, {3.618243795461076*^9, 3.618243830977426*^9}, {
   3.6182439083278437`*^9, 3.6182439325377417`*^9}, {3.6182439862468452`*^9, 
   3.618243999557255*^9}, {3.618244211631509*^9, 3.618244221012722*^9}, {
   3.618244283493123*^9, 3.618244349903936*^9}, {3.618244393620514*^9, 
   3.618244404380705*^9}, {3.618244483819705*^9, 3.618244493739213*^9}, {
   3.618244540195503*^9, 3.618244550018672*^9}, {3.618244601253501*^9, 
   3.618244705592936*^9}, {3.618246552804914*^9, 3.618246613992453*^9}, {
   3.618246658781184*^9, 3.6182466887342787`*^9}, {3.618287939216812*^9, 
   3.618287972513801*^9}, {3.618288007520605*^9, 3.6182880216060953`*^9}, {
   3.6182880729810743`*^9, 3.618288104104651*^9}, {3.6182910711599197`*^9, 
   3.618291143951558*^9}, {3.618291178227436*^9, 3.6182912328806877`*^9}, 
   3.618291542974183*^9, 3.6182916150166483`*^9, {3.618291694043262*^9, 
   3.618291706134671*^9}, {3.618291746372156*^9, 3.6182917587178087`*^9}, {
   3.618291834315823*^9, 3.618291834937578*^9}, 3.618295964737471*^9, {
   3.618296466391511*^9, 3.618296468748794*^9}, {3.6182965526968527`*^9, 
   3.618296585761541*^9}, {3.61829699284676*^9, 3.618297045716864*^9}, {
   3.618297112895299*^9, 3.618297118714839*^9}, {3.618297179343549*^9, 
   3.618297180537211*^9}, {3.6182972111326513`*^9, 3.618297235439507*^9}, {
   3.6182972756154823`*^9, 3.618297305028352*^9}, {3.618297359338545*^9, 
   3.61829737955099*^9}, {3.6182979602521544`*^9, 3.618297991689004*^9}, {
   3.6182982601834*^9, 3.618298262048633*^9}, {3.6183020311833057`*^9, 
   3.618302100017009*^9}, 3.618302131274551*^9, {3.618304167977129*^9, 
   3.6183041703567333`*^9}, {3.6183203991753817`*^9, 3.618320486403735*^9}, {
   3.61833578439364*^9, 3.6183357870676947`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(Options[DefVMetric]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618335652399954*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.618335652402658*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(DefVMetric[\\(\\(signdet_, \
\\(\\(metric_[\\(\\(\\(\\(-ind1_\\)\\), \\(\\(-ind2_\\)\\)\\)\\)]\\)\\), \
\\(\\(options : \\(\\(OptionsPattern[]\\)\\)\\)\\)\\)\\)]\\)\[NoBreak] is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6183356524466352`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(DefVMetric[\\(\\(_, metric_, _, \
\\(\\(OptionsPattern[]\\)\\)\\)\\)]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618335652449037*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(DefVMetric[]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6183356524505243`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(DefVMetric[_]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6183356524517384`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(DefVMetric\\)\[NoBreak] in \
\[NoBreak]\\!\\(DefVMetric[\\(\\(_, _\\)\\)]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618335652453512*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(SetDelayed :: write\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618335652455657*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefVEpsilonOfMetric", "[", 
   RowBox[{"metric_", ",", "vbundle_", ",", "eoib_", ",", "frozenQ_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dim", ",", "integerdimQ"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dim", "=", 
      RowBox[{"DimOfVBundle", "[", "vbundle", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"integerdimQ", "=", 
      RowBox[{"IntegerQ", "[", "dim", "]"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"metric", "/:", 
      RowBox[{"epsilonOrientation", "[", 
       RowBox[{"metric", ",", 
        RowBox[{"eoib", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "=", 
      RowBox[{"eoib", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"epsilonname", "=", 
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"epsilon", ",", "metric"}], "]"}]}], ",", "\n", 
         RowBox[{"inds", "=", 
          RowBox[{"GetIndicesOfVBundle", "[", 
           RowBox[{"vbundle", ",", 
            RowBox[{"If", "[", 
             RowBox[{"integerdimQ", ",", "dim", ",", "2"}], "]"}]}], 
           "]"}]}]}], "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"DefTensor", "[", 
         RowBox[{
          RowBox[{"epsilonname", "@@", 
           RowBox[{"(", 
            RowBox[{"ChangeIndex", "/@", "inds"}], ")"}]}], ",", 
          RowBox[{"DependenciesOfTensor", "[", "metric", "]"}], ",", 
          RowBox[{"Antisymmetric", "@", 
           RowBox[{"Range", "@", 
            RowBox[{"Length", "@", "inds"}]}]}], ",", "\n", 
          RowBox[{"PrintAs", ":>", 
           RowBox[{"GiveOutputString", "[", 
            RowBox[{"epsilon", ",", "metric"}], "]"}]}], ",", "\n", 
          RowBox[{"ProtectNewSymbol", "->", "False"}], ",", "\n", 
          RowBox[{"Master", "->", "metric"}], ",", "\n", 
          RowBox[{"DefInfo", ":>", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<antisymmetric tensor\>\"", ",", "\"\<\>\""}], 
              "}"}], "\n", "TensorID"}], "->", 
            RowBox[{"{", 
             RowBox[{"epsilon", ",", "metric"}], "}"}]}]}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "integerdimQ"}], ",", "\n", 
          RowBox[{
           RowBox[{"TagSetDelayed", "[", 
            RowBox[{"epsilonname", ",", 
             RowBox[{"SymmetryGroupOfTensor", "[", 
              RowBox[{"epsilonname", "[", "inds1__", "]"}], "]"}], ",", 
             RowBox[{"Antisymmetric", "[", 
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", 
                RowBox[{"{", "inds1", "}"}]}]}], "]"}]}], "]"}], ";", "\n", 
           RowBox[{"TagUnset", "[", 
            RowBox[{"epsilonname", ",", 
             RowBox[{"SymmetryGroupOfTensor", "[", "epsilonname", "]"}]}], 
            "]"}], ";", "\n", 
           RowBox[{"TagSetDelayed", "[", 
            RowBox[{"epsilonname", ",", 
             RowBox[{"SymmetryGroupOfTensor", "[", "epsilonname", "]"}], ",", 
             
             RowBox[{"Antisymmetric", "[", 
              RowBox[{"Range", "@", 
               RowBox[{"DimOfVBundle", "@", "vbundle"}]}], "]"}]}], "]"}]}]}],
          "\n", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"frozenQ", ",", "\n", 
          RowBox[{"epsilonname", "/:", 
           RowBox[{
            RowBox[{"epsilonname", "[", "inds1__", "]"}], 
            RowBox[{"epsilonname", "[", "inds2__", "]"}]}], ":=", 
           RowBox[{
            RowBox[{"SignDetOfMetric", "[", "metric", "]"}], 
            RowBox[{
             RowBox[{"ExpandGdelta", "[", "metric", "]"}], "[", 
             RowBox[{"inds1", ",", "inds2"}], "]"}]}]}], ",", "\n", 
          RowBox[{"epsilonname", "/:", 
           RowBox[{
            RowBox[{"epsilonname", "[", "inds1__", "]"}], 
            RowBox[{"epsilonname", "[", "inds2__", "]"}]}], ":=", 
           RowBox[{
            RowBox[{"SignDetOfMetric", "[", "metric", "]"}], 
            RowBox[{"ExpandGdelta", "[", 
             RowBox[{"Gdelta", "[", 
              RowBox[{"inds1", ",", "inds2"}], "]"}], "]"}]}]}]}], "\n", 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"$ProtectNewSymbols", ",", 
          RowBox[{"Protect", "[", "epsilonname", "]"}]}], "]"}]}]}], "\n", 
      "]"}], ";"}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.618297310903009*^9, 3.6182973369867764`*^9}, {
  3.61829738856059*^9, 3.618297393449181*^9}, {3.6182979538628693`*^9, 
  3.618297955213462*^9}, {3.618297998727599*^9, 3.618298023820695*^9}, {
  3.618298104504043*^9, 3.6182981348893414`*^9}, {3.618298270737501*^9, 
  3.618298278712154*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Make bundle metrics", "Subsubsection",
 CellChangeTimes->{{3.618330632094763*^9, 3.618330635753653*^9}, {
  3.6183758641053257`*^9, 3.618375865094975*^9}}],

Cell["\<\
I am happy with the following. True means that indices are raised with the \
inverse metric, so the inverse and the metric coincide when index is up. \
False just sets rules for the inverse of a symmetric bilinear. vbundle \
specifies that we have to restrict all indices to that bundle and its dual. \
For a diagonal decomposition so(m+n)->so(m)+so(n) we should not have any \
problems. For a non-diagonal decomposition better introduce new tensors.\
\>", "Text",
 CellChangeTimes->{{3.618323154313195*^9, 3.61832319770605*^9}, {
  3.618323281503016*^9, 3.618323401773779*^9}}],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"MakeLinearMetric", "[", 
    RowBox[{"metric_", ",", "invmetric_", ",", "newdelta_", ",", "vbundle_"}],
     "]"}], "Code"], 
  StyleBox[":=", "Code"], 
  RowBox[{
   StyleBox["With", "Code"], 
   StyleBox["[", "Code"], 
   StyleBox["\n", "Code"], 
   RowBox[{
    RowBox[{
     StyleBox["{", "Code"], 
     StyleBox[
      RowBox[{
       RowBox[{"vbQ", "=", 
        RowBox[{"xAct`xTensor`Private`VBundleIndexQ", "[", "vbundle", "]"}]}],
        ",", 
       RowBox[{"firstQ", "=", 
        RowBox[{"invmetric", "===", "metric"}]}]}], "Code"], 
     StyleBox["\n", "Code"], 
     RowBox[{
      StyleBox[
       StyleBox[
        RowBox[{"(", "*"}]], "Code"], 
      RowBox[{
       RowBox[{
       "vbQ", " ", "inserts", " ", "a", " ", "VBundleQ", " ", "string", " ", 
        "that", " ", "also", " ", "checks", " ", "Up"}], "-", "ness"}], 
      StyleBox[
       RowBox[{"*", ")"}]]}], 
     StyleBox["\n", "Code"], 
     StyleBox["}", "Code"]}], 
    StyleBox[",", "Code"], 
    StyleBox["\n", "Code"], 
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "firstQ"}], ",", 
         RowBox[{"(*", 
          RowBox[{"G", ":", 
           RowBox[{"is", " ", "vbQ", " ", "the", " ", 
            RowBox[{"total", "?"}]}]}], "*)"}], "\n", 
         RowBox[{
          RowBox[{"invmetric", "/:", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{
              RowBox[{"-", "a_"}], ",", 
              RowBox[{"-", 
               RowBox[{"b_", "?", "vbQ"}]}]}], "]"}], 
            RowBox[{"invmetric", "[", 
             RowBox[{
              RowBox[{"b_", "?", "EIndexQ"}], ",", "c_"}], "]"}]}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{"invmetric", "/:", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"b_", "?", "vbQ"}]}], ",", 
              RowBox[{"-", "a_"}]}], "]"}], 
            RowBox[{"invmetric", "[", 
             RowBox[{
              RowBox[{"b_", "?", "EIndexQ"}], ",", "c_"}], "]"}]}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{"invmetric", "/:", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{
              RowBox[{"-", "a_"}], ",", 
              RowBox[{"-", 
               RowBox[{"b_", "?", "vbQ"}]}]}], "]"}], 
            RowBox[{"invmetric", "[", 
             RowBox[{"c_", ",", 
              RowBox[{"b_", "?", "EIndexQ"}]}], "]"}]}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{"invmetric", "/:", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"b_", "?", "vbQ"}]}], ",", 
              RowBox[{"-", "a_"}]}], "]"}], 
            RowBox[{"invmetric", "[", 
             RowBox[{"c_", ",", 
              RowBox[{"b_", "?", "EIndexQ"}]}], "]"}]}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], 
          ";"}]}], "\n", "]"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{"firstQ", ",", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{"metric", "[", 
            RowBox[{
             RowBox[{"a_", "?", "UpIndexQ"}], ",", 
             RowBox[{"-", "b_"}]}], "]"}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "b"}], ",", "a"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "b", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"metric", "[", 
            RowBox[{
             RowBox[{"-", "a_"}], ",", 
             RowBox[{"b_", "?", "UpIndexQ"}]}], "]"}], ":=", 
           RowBox[{
            RowBox[{"newdelta", "[", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "b"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "b", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{"a_", ",", 
               RowBox[{"b_", "?", "vbQ"}]}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"b_", "?", "EIndexQ"}]}], ",", "c_"}], "]"}]}], "]"}],
            "^:=", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{"a", ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{"a_", ",", 
               RowBox[{"b_", "?", "vbQ"}]}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{"c_", ",", 
               RowBox[{"-", 
                RowBox[{"b_", "?", "EIndexQ"}]}]}], "]"}]}], "]"}], "^:=", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{"a", ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"b_", "?", "vbQ"}], ",", "a_"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"b_", "?", "EIndexQ"}]}], ",", "c_"}], "]"}]}], "]"}],
            "^:=", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{"a", ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"b_", "?", "vbQ"}], ",", "a_"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{"c_", ",", 
               RowBox[{"-", 
                RowBox[{"b_", "?", "EIndexQ"}]}]}], "]"}]}], "]"}], "^:=", 
           RowBox[{
            RowBox[{"metric", "[", 
             RowBox[{"a", ",", "c"}], "]"}], " ", "/;", 
            RowBox[{
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "a", "]"}]}], "]"}], "&&", 
             RowBox[{"SubvbundleQ", "[", 
              RowBox[{"vbundle", ",", 
               RowBox[{"VBundleOfIndex", "[", "c", "]"}]}], "]"}]}]}]}], 
          ";"}]}], "\n", "]"}]}], ";", "\n", 
      RowBox[{"invmetric", "/:", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"der_", "?", "FirstDerQ"}], "[", 
         RowBox[{"invmetric", "[", 
          RowBox[{
           RowBox[{"b_", "?", "vbQ"}], ",", 
           RowBox[{"c_", "?", "vbQ"}]}], "]"}], "]"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b1", "=", 
            RowBox[{"DummyIn", "[", "vbundle", "]"}]}], ",", 
           RowBox[{"c1", "=", 
            RowBox[{"DummyIn", "[", "vbundle", "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"invmetric", "[", 
            RowBox[{"b", ",", "b1"}], "]"}]}], 
          RowBox[{"invmetric", "[", 
           RowBox[{"c", ",", "c1"}], "]"}], 
          RowBox[{"der", "[", 
           RowBox[{"metric", "[", 
            RowBox[{
             RowBox[{"-", "b1"}], ",", 
             RowBox[{"-", "c1"}]}], "]"}], "]"}]}]}], "]"}]}], ";"}], 
     "Code"]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"MakeLinearMetric", "[", 
    RowBox[{"metric_", ",", "newdelta_"}], "]"}], "Code"], 
  StyleBox[":=", "Code"], 
  RowBox[{
   StyleBox["MakeLinearMetric", "Code"], 
   StyleBox["[", "Code"], 
   RowBox[{
    StyleBox["metric", "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["metric", "Code"], 
    StyleBox[",", "Code"], 
    StyleBox["newdelta", "Code"], 
    StyleBox[",", "Code"], 
    RowBox[{
     StyleBox["Replace", "Code"], 
     StyleBox["[", "Code"], 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"SlotsOfTensor", "[", "metric", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "Code"], 
      StyleBox[",", "Code"], 
      RowBox[{
       StyleBox[
        RowBox[{"-", "a_"}], "Code"], 
       StyleBox["\[Rule]", "Code"], "a"}]}], " ", "]"}], 
    StyleBox[",", "Code"], 
    StyleBox["True", "Code"]}], 
   StyleBox["]", "Code"]}]}]}], "Code",
 CellChangeTimes->{{3.6183021093240013`*^9, 3.618302115711001*^9}, {
   3.6183021515906353`*^9, 3.618302177729598*^9}, {3.6183022325254*^9, 
   3.6183022592537613`*^9}, 3.618303409855015*^9, {3.618303451194718*^9, 
   3.618303513251272*^9}, {3.61830365225461*^9, 3.618303673100258*^9}, 
   3.6183039467552757`*^9, 3.618304016528195*^9, {3.6183041054455557`*^9, 
   3.6183041168978157`*^9}, {3.618304251305378*^9, 3.618304262266523*^9}, {
   3.618304293103758*^9, 3.618304342857354*^9}, {3.6183044437526197`*^9, 
   3.6183044493690557`*^9}, {3.6183072325461397`*^9, 3.618307251589961*^9}, {
   3.618307388793714*^9, 3.618307391764518*^9}, 3.618307460377963*^9, {
   3.618309029046834*^9, 3.618309051008911*^9}, {3.618309110713835*^9, 
   3.618309111221191*^9}, {3.618309195116287*^9, 3.618309218332513*^9}, {
   3.6183092573621387`*^9, 3.618309280131173*^9}, {3.618311076887347*^9, 
   3.618311161015435*^9}, {3.618315652640278*^9, 3.618315693489479*^9}, {
   3.618315727365382*^9, 3.618315778232695*^9}, {3.618315815406946*^9, 
   3.6183158307962427`*^9}, {3.6183232375507517`*^9, 
   3.6183232607027073`*^9}, {3.61832342641467*^9, 3.618323440596196*^9}, {
   3.618325052724015*^9, 3.618325075567544*^9}, {3.618553145128792*^9, 
   3.618553180643242*^9}, {3.618554700644948*^9, 3.618554731510274*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make automated parallel rules", "Subsubsection",
 CellChangeTimes->{{3.6185518848793488`*^9, 3.61855190015536*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeParallel", "[", 
   RowBox[{
    RowBox[{"metric_", "[", 
     RowBox[{"ind1_", ",", "ind2_"}], "]"}], ",", "covd_"}], "]"}], ":=", 
  RowBox[{"With", "[", "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vQ1", "=", 
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"SameBundleQ", "[", "ind1", "]"}], ",", 
         RowBox[{"SameUpDownQ", "[", "ind1", "]"}]}], "]"}]}], ",", "\n", 
      RowBox[{"vQ2", "=", 
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"SameBundleQ", "[", "ind2", "]"}], ",", 
         RowBox[{"SameUpDownQ", "[", "ind2", "]"}]}], "]"}]}]}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"covd", "[", "c_", "]"}], "[", 
       RowBox[{"metric", "[", 
        RowBox[{
         RowBox[{"a_", "?", "vQ1"}], ",", 
         RowBox[{"b_", "?", "vQ2"}]}], "]"}], "]"}], "^=", "0"}], ";"}]}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"TensorDerivative", "[", 
       RowBox[{"metric", ",", "covd", ",", "___"}], "]"}], ":=", "Zero"}], 
     ";", "\n", 
     RowBox[{
      RowBox[{"MetricOfCovD", "[", "covd", "]"}], "^=", "metric"}], ";", "\n", 
     RowBox[{"metric", "/:", 
      RowBox[{"CovDOfMetric", "[", "metric", "]"}], "=", "covd"}], ";"}], 
    "*)"}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.618201779976156*^9, 3.618201785771365*^9}, {
   3.618202196052984*^9, 3.61820222245249*^9}, {3.618202265554014*^9, 
   3.618202305558085*^9}, {3.6182024244302473`*^9, 3.61820242507089*^9}, {
   3.618202692759254*^9, 3.6182027195071783`*^9}, {3.618202765715335*^9, 
   3.6182027755230227`*^9}, {3.618202898235505*^9, 3.618202939342008*^9}, {
   3.618203060498702*^9, 3.618203116262766*^9}, {3.618203518724937*^9, 
   3.618203527491209*^9}, {3.618203744610003*^9, 3.61820375288417*^9}, {
   3.618203831545755*^9, 3.618203861239894*^9}, {3.618203894338325*^9, 
   3.6182038977261143`*^9}, {3.618204157398809*^9, 3.618204179534112*^9}, {
   3.6182056441316023`*^9, 3.6182056451461153`*^9}, {3.6182057626037207`*^9, 
   3.6182058099681187`*^9}, {3.618205970757449*^9, 3.618206071743587*^9}, {
   3.618206113489666*^9, 3.618206115850659*^9}, {3.618206335325392*^9, 
   3.618206346088736*^9}, 3.618206440294778*^9, {3.618206476272614*^9, 
   3.618206478547701*^9}, {3.618206523952736*^9, 3.618206546342362*^9}, {
   3.618207346988553*^9, 3.618207361621283*^9}, {3.6182074472573767`*^9, 
   3.618207460547463*^9}, {3.618207560693178*^9, 3.6182075981811457`*^9}, {
   3.618207679600202*^9, 3.618207687760268*^9}, {3.618207929575616*^9, 
   3.618207933338839*^9}, {3.618207996012108*^9, 3.618208003294754*^9}, {
   3.618208058705143*^9, 3.6182080962978973`*^9}, {3.6182083833930473`*^9, 
   3.618208392403254*^9}, {3.618208506087833*^9, 3.618208520132477*^9}, {
   3.618208551099393*^9, 3.6182085563234673`*^9}, {3.618208663315486*^9, 
   3.6182086888824797`*^9}, {3.618210076006617*^9, 3.618210094622252*^9}, {
   3.618210134352497*^9, 3.618210137674712*^9}, {3.618210345516509*^9, 
   3.6182103771426888`*^9}, {3.618210454492133*^9, 3.6182104592805853`*^9}, {
   3.618210517920518*^9, 3.618210531604137*^9}, {3.618238057917098*^9, 
   3.618238069892584*^9}, {3.6183205655817213`*^9, 3.618320755121415*^9}, {
   3.6183256015533857`*^9, 3.6183256375079193`*^9}, 3.61832567776476*^9, 
   3.6183257517164288`*^9, 3.618325850537921*^9, {3.6183260619529*^9, 
   3.618326110243273*^9}, 3.618326164145753*^9, {3.618326249661098*^9, 
   3.618326250682722*^9}, {3.618326399991342*^9, 3.618326459091313*^9}, {
   3.6183265965903883`*^9, 3.618326602345868*^9}, 3.618326659509348*^9, {
   3.618326782660163*^9, 3.618326810543663*^9}, {3.618326877851171*^9, 
   3.6183268875059032`*^9}, 3.6183269551807756`*^9, 3.618327089427052*^9, {
   3.618328065435019*^9, 3.618328067353217*^9}, {3.6183281122927303`*^9, 
   3.6183281223845043`*^9}, {3.618328696365446*^9, 3.618328730085896*^9}, {
   3.618328771463051*^9, 3.6183288049726963`*^9}, {3.618329256658846*^9, 
   3.6183293514129953`*^9}, 3.618329409346765*^9, {3.618329494850772*^9, 
   3.618329522102005*^9}, {3.6183295559318447`*^9, 3.618329566367383*^9}, {
   3.618329756236762*^9, 3.618329759237091*^9}, {3.618329807458749*^9, 
   3.618329811575446*^9}, {3.6183299186670237`*^9, 3.618329921784281*^9}, {
   3.618329958777019*^9, 3.6183299602860823`*^9}, {3.6183301737115183`*^9, 
   3.618330214999251*^9}, {3.618330370224872*^9, 3.6183304296862917`*^9}, {
   3.618330467985757*^9, 3.618330514798458*^9}, {3.618330545869872*^9, 
   3.618330547791551*^9}, {3.61833134711161*^9, 3.618331347990808*^9}, {
   3.618378310121757*^9, 3.6183783316624393`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Working with equalities", "Subsubsection",
 CellChangeTimes->{{3.618375413379551*^9, 3.618375417092779*^9}}],

Cell["Make tensor functions work on equalities", "Text",
 CellChangeTimes->{{3.618048514203197*^9, 3.6180485260540743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"functions", "=", 
   RowBox[{"{", "TraceProductDummy", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "@@", "functions"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SetDelayed", "[", 
      RowBox[{
       RowBox[{"#", "[", "equality_Equal", "]"}], ",", 
       RowBox[{"#", "/@", "equality"}]}], "]"}], "&"}], ",", "functions"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@@", "functions"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "functions", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"FoldOut", "[", "]"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", "function", "]"}], "\[IndentingNewLine]", 
         RowBox[{"Unprotect", "[", "function", "]"}], "\[IndentingNewLine]", 
         RowBox[{"function", "[", "equality_Equal", "]"}]}], ":=", 
        RowBox[{
         RowBox[{"function", "/@", "equality"}], "\[IndentingNewLine]", 
         RowBox[{"Protect", "[", "function", "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"function", ",", 
         RowBox[{"{", "TraceProductDummy", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.617971357219008*^9, 3.617971373935298*^9}, {
   3.617971704079611*^9, 3.617971737889553*^9}, {3.617971800139553*^9, 
   3.61797184241521*^9}, {3.618032866577629*^9, 3.618032867351466*^9}, {
   3.618032937494269*^9, 3.6180329871782703`*^9}, {3.618033146992569*^9, 
   3.618033174569832*^9}, {3.618033692523449*^9, 3.618033710313341*^9}, 
   3.6180337904472513`*^9, {3.618033863749675*^9, 3.618033869552479*^9}, {
   3.6180345101892138`*^9, 3.618034668656979*^9}, {3.618034702938946*^9, 
   3.618034778109477*^9}, {3.618035913762108*^9, 3.61803596969693*^9}, {
   3.6180558236668997`*^9, 3.618055823880794*^9}}],

Cell["Equality tensor", "Text",
 CellChangeTimes->{{3.618114998580759*^9, 3.618115005536786*^9}, {
  3.618115890924179*^9, 3.6181158942206984`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqTimes", "[", "exp_", "]"}], "[", "exp2_Equal", "]"}], ":=", 
   RowBox[{"Map", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"exp", "*", "#"}], "&"}], ",", "exp2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqChangeFreeIndices", "[", "free_List", "]"}], "[", "exp_Equal", 
    "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeFreeIndices", "[", 
       RowBox[{"#", ",", "free"}], "]"}], "&"}], ",", "exp"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EqTraceProductDummy", "[", "exp_Equal", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"TraceProductDummy", ",", "exp"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EqIndices", "[", "exp_Equal", "]"}], ":=", 
  RowBox[{"HoldFirst", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FindFreeIndices", "[", "#", "]"}], ",", 
        RowBox[{"FindDummyIndices", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     "exp"}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.618115009564946*^9, 3.618115083506381*^9}, {
  3.618115896545636*^9, 3.618115954919608*^9}, {3.618115985125387*^9, 
  3.61811598703281*^9}, {3.6181160226910954`*^9, 3.618116089855445*^9}, {
  3.618116745687622*^9, 3.61811675662858*^9}, {3.61811679152006*^9, 
  3.618116818701228*^9}, {3.618116865366764*^9, 3.618116887407106*^9}, {
  3.618116932392295*^9, 3.618116933110283*^9}, {3.61812625427099*^9, 
  3.6181262814126263`*^9}, {3.61812705209578*^9, 3.618127071553451*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Projections", "Subsubsection",
 CellChangeTimes->{{3.61837549739327*^9, 3.618375500419029*^9}}],

Cell["\<\
My diagonal projectors. ReplaceIndex might be less confusing for many slots. \
These are simple projectors for a decomposition. Make sure to set zero \
components after one has reduced the covariant derivatives defined on the \
superspace.\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.618032389929654*^9, 3.618032394772599*^9}, {
  3.61811351036609*^9, 3.618113576112831*^9}, {3.618113618709611*^9, 
  3.618113631586478*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProjectOnto", "[", "inds__", "]"}], "[", "exp_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ReplaceIndex", "[", 
    RowBox[{"exp", ",", "\n", 
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"List", "@@", 
        RowBox[{
         RowBox[{"IndicesOf", "[", "Free", "]"}], "[", "exp", "]"}]}], ",", 
       RowBox[{"List", "[", "inds", "]"}], ",", "List"}], "]"}]}], "]"}], "/;",
    "\n", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"IndicesOf", "[", "Free", "]"}], "[", "exp", "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"Length", "[", 
     RowBox[{"List", "[", "inds", "]"}], "]"}]}]}]}]], "Code",
 InitializationGroup->True,
 CellChangeTimes->{{3.618032398547377*^9, 3.618032436282174*^9}, {
   3.6180327537350492`*^9, 3.618032781781577*^9}, {3.618036319944008*^9, 
   3.618036364994135*^9}, {3.618036467091116*^9, 3.618036541793343*^9}, {
   3.6180365984926443`*^9, 3.6180366053952827`*^9}, {3.618036653362014*^9, 
   3.6180366638918447`*^9}, {3.618036766160741*^9, 3.618036767846786*^9}, {
   3.618037115256619*^9, 3.618037125284006*^9}, {3.618040277709688*^9, 
   3.618040303103038*^9}, {3.618056171769113*^9, 3.618056182708991*^9}, 
   3.618056247774948*^9, {3.618113586341069*^9, 3.618113586740343*^9}, {
   3.61837552188706*^9, 3.618375555294507*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dump", "Subsubsection",
 CellChangeTimes->{{3.618375646306445*^9, 3.6183756485574293`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ContractDelta", "[", 
   RowBox[{"delt_", ",", "exp_"}], "]"}], ":=", 
  RowBox[{"ReleaseHold", "[", 
   RowBox[{
    RowBox[{"Hold", "[", "exp", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"delt", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", "b_Symbol", ")"}]}], ",", "a_Symbol"}], "]"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"delta", "[", 
           RowBox[{
            RowBox[{"-", "b"}], ",", "a"}], "]"}]}], "]"}], "/;", 
        RowBox[{
         RowBox[{"VBundleOfIndex", "[", "a", "]"}], "\[Equal]", 
         RowBox[{"VBundleOfIndex", "[", "b", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"delt", "[", 
         RowBox[{"a_Symbol", ",", 
          RowBox[{"-", 
           RowBox[{"(", "b_Symbol", ")"}]}]}], "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"delta", "[", 
           RowBox[{
            RowBox[{"-", "b"}], ",", "a"}], "]"}]}], "]"}], "/;", 
        RowBox[{
         RowBox[{"VBundleOfIndex", "[", "a", "]"}], "\[Equal]", 
         RowBox[{"VBundleOfIndex", "[", "b", "]"}]}]}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContractDelta", "[", "delt_", "]"}], "[", "exp_", "]"}], ":=", 
  RowBox[{"ContractDelta", "[", 
   RowBox[{"delt", ",", 
    RowBox[{"Hold", "[", "exp", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6181605804366093`*^9, 3.618160595536166*^9}, {
  3.618161006414259*^9, 3.618161020263365*^9}, {3.6181611353096*^9, 
  3.618161146603774*^9}, {3.6181613620621347`*^9, 3.6181614010929413`*^9}, {
  3.618161502241375*^9, 3.618161503059363*^9}, {3.618161547618821*^9, 
  3.6181616349641438`*^9}, {3.618161677673862*^9, 3.6181616940957737`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End Package", "Subsection",
 CellChangeTimes->{{3.6183309416023197`*^9, 3.618330946768786*^9}}],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Code"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1132, 741},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 100, 1, 39, "Subsection"],
Cell[682, 25, 367, 9, 30, "Input"],
Cell[1052, 36, 143, 3, 30, "Text"],
Cell[1198, 41, 761, 15, 46, "Code",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1996, 61, 148, 2, 39, "Subsection"],
Cell[CellGroupData[{
Cell[2169, 67, 112, 1, 28, "Subsubsection"],
Cell[2284, 70, 165, 3, 30, "Text"],
Cell[2452, 75, 755, 18, 66, "Code",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[3232, 97, 412, 12, 30, "Input"],
Cell[3647, 111, 98, 1, 30, "Output"]
}, Open  ]],
Cell[3760, 115, 996, 30, 66, "Code"],
Cell[4759, 147, 820, 19, 66, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5616, 171, 284, 4, 28, "Subsubsection"],
Cell[5903, 177, 106, 1, 30, "Text"],
Cell[6012, 180, 2257, 38, 46, "Code",
 InitializationGroup->True],
Cell[8272, 220, 2732, 50, 85, "Code",
 InitializationGroup->True],
Cell[11007, 272, 121, 1, 30, "Text"],
Cell[11131, 275, 2140, 36, 46, "Code",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13308, 316, 197, 2, 28, "Subsubsection"],
Cell[13508, 320, 238, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[13771, 329, 1741, 45, 107, "Input"],
Cell[15515, 376, 294, 8, 30, "Output"]
}, Open  ]],
Cell[15824, 387, 9815, 180, 389, "Code",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[25676, 572, 151, 2, 22, "Subsubsection"],
Cell[25830, 576, 15251, 393, 959, "Code"],
Cell[41084, 971, 273, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[41382, 980, 136, 2, 46, "Code"],
Cell[41521, 984, 199, 3, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41769, 993, 208, 3, 22, "Subsubsection"],
Cell[41980, 998, 740, 17, 85, "Code"],
Cell[42723, 1017, 9229, 214, 598, "Code"],
Cell[CellGroupData[{
Cell[51977, 1235, 18952, 392, 1947, "Code"],
Cell[70932, 1629, 500, 10, 24, "Message"],
Cell[71435, 1641, 76, 1, 30, "Output"],
Cell[71514, 1644, 646, 13, 24, "Message"],
Cell[72163, 1659, 550, 11, 24, "Message"],
Cell[72716, 1672, 495, 10, 24, "Message"],
Cell[73214, 1684, 496, 10, 24, "Message"],
Cell[73713, 1696, 509, 10, 24, "Message"],
Cell[74225, 1708, 534, 11, 24, "Message"]
}, Open  ]],
Cell[74774, 1722, 4836, 113, 503, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[79647, 1840, 161, 2, 22, "Subsubsection"],
Cell[79811, 1844, 588, 9, 68, "Text"],
Cell[80402, 1855, 13045, 336, 427, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93484, 2196, 121, 1, 28, "Subsubsection"],
Cell[93608, 2199, 4653, 85, 180, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[98298, 2289, 114, 1, 22, "Subsubsection"],
Cell[98415, 2292, 124, 1, 30, "Text"],
Cell[98542, 2295, 2061, 47, 237, "Code",
 InitializationGroup->True],
Cell[100606, 2344, 148, 2, 30, "Text"],
Cell[100757, 2348, 1657, 44, 104, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[102451, 2397, 101, 1, 22, "Subsubsection"],
Cell[102555, 2400, 454, 9, 49, "Text",
 InitializationGroup->True],
Cell[103012, 2411, 1352, 30, 85, "Code",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[104401, 2446, 97, 1, 28, "Subsubsection"],
Cell[104501, 2449, 2031, 53, 126, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106581, 2508, 101, 1, 39, "Subsection"],
Cell[106685, 2511, 57, 1, 46, "Code"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
